*** /dspace/orig-1.2.2/dspace-1.2.1-source/src/org/dspace/app/itemimport/ItemImport.java	Thu Jan  6 04:41:29 2005
--- /dspace/orig-1.2.2/dspace-1.2.2-source/src/org/dspace/app/itemimport/ItemImport.java	Wed Mar  9 23:37:48 2005
***************
*** 1,11 ****
  /*
   * ItemImport.java
   *
!  * $Id: ItemImport.java,v 1.21 2005/01/06 09:41:29 jimdowning Exp $
   *
!  * Version: $Revision: 1.21 $
   *
!  * Date: $Date: 2005/01/06 09:41:29 $
   *
   * Copyright (c) 2002, Hewlett-Packard Company and Massachusetts
   * Institute of Technology.  All rights reserved.
--- 1,11 ----
  /*
   * ItemImport.java
   *
!  * $Id: ItemImport.java,v 1.23 2005/03/10 04:37:48 syeadon Exp $
   *
!  * Version: $Revision: 1.23 $
   *
!  * Date: $Date: 2005/03/10 04:37:48 $
   *
   * Copyright (c) 2002, Hewlett-Packard Company and Massachusetts
   * Institute of Technology.  All rights reserved.
***************
*** 114,120 ****
                  "delete items listed in mapfile");
          options.addOption("s", "source", true, "source of items (directory)");
          options.addOption("c", "collection", true,
!                 "destination collection(s) databse ID");
          options.addOption("m", "mapfile", true, "mapfile items in mapfile");
          options.addOption("e", "eperson", true,
                  "email of eperson doing importing");
--- 114,120 ----
                  "delete items listed in mapfile");
          options.addOption("s", "source", true, "source of items (directory)");
          options.addOption("c", "collection", true,
!                 "destination collection(s) Handle or database ID");
          options.addOption("m", "mapfile", true, "mapfile items in mapfile");
          options.addOption("e", "eperson", true,
                  "email of eperson doing importing");
***************
*** 494,499 ****
--- 494,500 ----
              // get the old handle
              String newItemName = (String) i.next();
              String oldHandle = (String) myhash.get(newItemName);
+ 
              Item oldItem = null;
              Item newItem = null;
  
***************
*** 508,530 ****
              {
                  oldItem = Item.find(c, Integer.parseInt(oldHandle));
              }
  
              newItem = addItem(c, mycollections, sourceDir, newItemName, null);
- 
-             // schedule item for demolition
-             itemsToDelete.add(oldItem);
          }
- 
-         // now run through again, deleting items (do this last to avoid
-         // disasters!)
-         // (this way deletes only happen if there have been no errors
-         // previously)
-         i = itemsToDelete.iterator();
- 
-         while (i.hasNext())
-         {
-             deleteItem(c, (Item) i.next());
-         }
      }
  
      private void deleteItems(Context c, String mapFile) throws Exception
--- 509,540 ----
              {
                  oldItem = Item.find(c, Integer.parseInt(oldHandle));
              }
+             
+             /* Rather than exposing public item methods to change handles -- 
+              * two handles can't exist at the same time due to key constraints
+              * so would require temp handle being stored, old being copied to new and
+              * new being copied to old, all a bit messy -- a handle file is written to
+              * the import directory containing the old handle, the existing item is 
+              * deleted and then the import runs as though it were loading an item which 
+              * had already been assigned a handle (so a new handle is not even assigned).
+              * As a commit does not occur until after a successful add, it is safe to 
+              * do a delete as any error results in an aborted transaction without harming
+              * the original item */
+             File handleFile = new File(sourceDir + File.separatorChar + newItemName + File.separatorChar + "handle");
+             PrintWriter handleOut = new PrintWriter(new FileWriter(handleFile, true));
  
+             if (handleOut == null)
+             {
+                 throw new Exception("can't open handle file: " + handleFile.getCanonicalPath());
+             }
+             
+             handleOut.println(oldHandle);
+             handleOut.close();
+             
+             deleteItem(c, oldItem);
+             
              newItem = addItem(c, mycollections, sourceDir, newItemName, null);
          }
      }
  
      private void deleteItems(Context c, String mapFile) throws Exception
