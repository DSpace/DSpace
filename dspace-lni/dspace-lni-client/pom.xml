<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.dspace</groupId>
   <artifactId>dspace-lni-client</artifactId>
   <packaging>jar</packaging>
   <name>DSpace LNI :: CLI Client Application</name>
   <description>
      Example Client for working with DSpace LNI Service.
   </description>

   <parent>
      <groupId>org.dspace</groupId>
      <artifactId>dspace-parent</artifactId>
      <version>4.3-SNAPSHOT</version>
      <relativePath>../..</relativePath>
   </parent>
   
   <properties>
       <!-- This is the path to the root [dspace-src] directory. -->
       <root.basedir>${basedir}/../..</root.basedir>
   </properties>

   <!--
        Running this profile will regenerate (from WSDL) most of the classes
        under the 'org.dspace.app.dav.client' package, based on the existing
        'org.dspace.app.dav.LNISoapServlet' class in the dspace-lni API.

        This profile is only activated if you explicitly run:
           mvn package -P regenerate-wsdl

        Please note that after regenerating these classes, you will need to manually
        re-apply the DSpace license header, in order for them to pass license header
        checks executed during "mvn install" or "mvn release".
   -->
   <profiles>
      <profile>
         <id>regenerate-wsdl</id>
         <activation>
            <activeByDefault>false</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <phase>generate-sources</phase>
                        <configuration>
                           <target>
                              <taskdef resource="axis-tasks.properties" classpathref="maven.compile.classpath" />
                              <mkdir dir="src/main/config" />
                              <axis-java2wsdl classname="org.dspace.app.dav.LNISoapServlet" location="http://localhost/dspace/lni/DSpaceLNI" methods="lookup,propfind,proppatch,copy" namespace="http://dspace.org/xmlns/lni" output="src/main/resources/dspace-lni.wsdl" />
                              <mkdir dir="src/main/java" />
                              <axis-wsdl2java output="src/main/java" verbose="true" url="src/main/resources/dspace-lni.wsdl">
                                 <mapping namespace="http://dspace.org/xmlns/lni" package="org.dspace.app.dav.client" />
                              </axis-wsdl2java>
                           </target>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>

   <build>
      <plugins>
         <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
               <descriptorRefs>
                  <descriptorRef>jar-with-dependencies</descriptorRef>
               </descriptorRefs>
               <archive>
                  <manifest>
                     <mainClass>LNISmokeTest</mainClass>
                  </manifest>
               </archive>
            </configuration>
            <executions>
               <execution>
                  <goals>
                     <goal>attached</goal>
                  </goals>
                  <phase>package</phase>
               </execution>
            </executions>
         </plugin>
         
         <!--
            This is another approach to packaging the LNI client that may be approached.
            This creates bin dir with shell scripts and lib directory.
         
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>appassembler-maven-plugin</artifactId>
            <configuration>
               <binPrefix>lni-</binPrefix>
               <extraJvmArguments>-Xms512m</extraJvmArguments>
               <platforms>
                  <platform>windows</platform>
                  <platform>unix</platform>
               </platforms>
               <programs>
                  <program>
                     <mainClass>LNISmokeTest</mainClass>
                     <name>client</name>
                     <platforms>
                        <platform>unix</platform>
                        <platform>windows</platform>
                     </platforms>
                  </program>
               </programs>
            </configuration>
            <executions>
               <execution>
                  <goals>
                     <goal>assemble</goal>
                  </goals>
                  <phase>package</phase>
               </execution>
            </executions>
         </plugin>
          --> 
          
      </plugins>
   </build>

   <dependencies>
      <dependency>
         <groupId>javax.activation</groupId>
         <artifactId>activation</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.mail</groupId>
         <artifactId>mail</artifactId>
      </dependency>
      <dependency>
         <groupId>jdom</groupId>
         <artifactId>jdom</artifactId>
      </dependency>
      <dependency>
         <groupId>wsdl4j</groupId>
         <artifactId>wsdl4j</artifactId>
      </dependency>
      <dependency>
         <groupId>commons-discovery</groupId>
         <artifactId>commons-discovery</artifactId>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
      </dependency>
      <dependency>
         <groupId>commons-cli</groupId>
         <artifactId>commons-cli</artifactId>
      </dependency>
      <dependency>
         <groupId>commons-codec</groupId>
         <artifactId>commons-codec</artifactId>
      </dependency>
      <dependency>
         <groupId>log4j</groupId>
         <artifactId>log4j</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.xml</groupId>
         <artifactId>jaxrpc-api</artifactId>
      </dependency>
      <dependency>
         <groupId>axis</groupId>
         <artifactId>axis</artifactId>
      </dependency>
      <dependency>
         <groupId>axis</groupId>
         <artifactId>axis-ant</artifactId>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>axis</groupId>
         <artifactId>axis-saaj</artifactId>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.dspace</groupId>
         <artifactId>dspace-lni</artifactId>
         <type>jar</type>
         <classifier>classes</classifier>
      </dependency>
   </dependencies>

</project>
