<?xml version="1.0"?>

<!--
  - Copyright (c) 2002, Hewlett-Packard Company and Massachusetts
  - Institute of Technology.  All rights reserved.
  - 
  - Redistribution and use in source and binary forms, with or without
  - modification, are permitted provided that the following conditions are
  - met:
  - 
  - - Redistributions of source code must retain the above copyright
  - notice, this list of conditions and the following disclaimer.
  - 
  - - Redistributions in binary form must reproduce the above copyright
  - notice, this list of conditions and the following disclaimer in the
  - documentation and/or other materials provided with the distribution.
  - 
  - - Neither the name of the Hewlett-Packard Company nor the name of the
  - Massachusetts Institute of Technology nor the names of their
  - contributors may be used to endorse or promote products derived from
  - this software without specific prior written permission.
  - 
  - THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  - ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  - LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
  - A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
  - HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  - INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  - BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
  - OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  - ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
  - TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
  - USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
  - DAMAGE.
  -->

<!--
  - DSpace build file
  -
  - Version:  $Revision: 1.35 $
  - Date:     $Date: 2004/06/07 13:41:37 $
  -->

<project name="DSpace" default="compile">

  <!-- ============================================================= -->
  <!-- Description                                                   -->
  <!-- ============================================================= -->

  <description>
====================== DSpace platform build file ======================

Common usage:

  Fresh install, including database setup and registry loading:
    % ant fresh_install
  
  Update existing installation, leaving data and configuration intact:
    % ant -Dconfig=/installdir/config/dspace.cfg update

========================================================================
  </description>

  <!-- ============================================================= -->
  <!-- Will be using various environment variables                   -->
  <!-- ============================================================= -->

  <property environment="env"/>


  <!-- ============================================================= -->
  <!-- Build parameters that are likely to need tweaking             -->
  <!-- ============================================================= -->
    
  <!-- Default configuration to use.  This may be overridden. -->
  <property name="config" value="config/dspace.cfg" />

  <!-- Give user a chance to override without editing this file 
       (and without typing -D each time s/he compiles it) -->
  <property file="${user.home}/.dspace.properties" />

  <!-- Load the configuration -->
  <property file="${config}" />


  <!-- ============================================================= -->
  <!-- The DSpace class path for building                            -->
  <!-- ============================================================= -->

  <!-- We will include the environment CLASSPATH -->
  <path id="build.class.path">
    <pathelement path="${env.CLASSPATH}"/>
    <pathelement path="build/classes"/>
    <fileset dir="lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  
  <!-- ============================================================= -->
  <!-- Compile the source code                                       -->
  <!-- ============================================================= -->

  <target name="compile"
          description="Compile the source code">
    <mkdir dir="build/classes"/>
    <javac srcdir="src"
           destdir="build/classes"
           debug="on">
      <include name="**/*.java"/>
      <classpath refid="build.class.path"/>
    </javac>
  </target>


  <!-- ============================================================= -->
  <!-- Build the .war files                                          -->
  <!-- ============================================================= -->

  <target name="build_wars"
          depends="compile"
          description="Build the .war files">  
    <!-- Build DSpace UI .war -->
    <copy file="etc/dspace-web.xml"
          tofile="build/dspace-web.xml"
          preservelastmodified="true"/>
    <replace file="build/dspace-web.xml"
             token="@@dspace.dir@@"
             value="${dspace.dir}" />
    <!-- Make sure jsp/local exists -->
    <mkdir dir="jsp/local" />
    <!-- Copy original JSPs, then copy localised versions on top -->
    <mkdir dir="build/jsp" />
    <copy todir="build/jsp" preservelastmodified="true">
      <fileset dir="jsp">
        <exclude name="local/**" />
      </fileset>
    </copy>
    <copy todir="build/jsp" preservelastmodified="true" overwrite="true">
      <fileset dir="jsp/local" />
    </copy>
    <war destfile="build/dspace.war"
         webxml="build/dspace-web.xml">
       <fileset dir="build/jsp" />
       <lib dir="lib">
         <exclude name="servlet.jar" />
       </lib>
       <classes dir="build/classes" />
    </war>
    <!-- Build DSpace OAI-PMH .war -->
    <copy file="etc/oai-web.xml"
          tofile="build/oai-web.xml"
          preservelastmodified="true"/>
    <replace file="build/oai-web.xml"
             token="@@dspace.dir@@"
             value="${dspace.dir}" />
    <war destfile="build/dspace-oai.war"
         webxml="build/oai-web.xml">
       <lib dir="lib">
         <exclude name="servlet.jar" />
       </lib>
       <classes dir="build/classes" />
    </war>
  </target>
  
    
  <!-- ============================================================= -->
  <!-- Update an installation (except database)                      -->
  <!-- ============================================================= -->

  <target name="update"
          depends="compile,install_code"
          description="Update installed code (without clobbering data/config)">
  </target>


  <!-- ============================================================= -->
  <!-- Install or update DSpace code                                 -->
  <!-- ============================================================= -->

  <target name="install_code"
          depends="compile">
    <mkdir dir="${dspace.dir}/config" />
    <mkdir dir="${assetstore.dir}" />
    <mkdir dir="${handle.dir}" />
    <mkdir dir="${history.dir}" />
    <mkdir dir="${search.dir}" />
    <mkdir dir="${log.dir}" />
    <mkdir dir="${upload.temp.dir}" />
    <mkdir dir="${dspace.dir}/bin"/>
    <mkdir dir="${dspace.dir}/lib"/>
    <copy todir="${dspace.dir}/bin" preservelastmodified="true">
      <fileset dir="bin"/>
    </copy>
    <chmod dir="${dspace.dir}/bin" perm="u+x" includes="**/*" />
    <copy todir="${dspace.dir}/lib" preservelastmodified="true">
      <fileset dir="lib" />
    </copy>
    <jar jarfile="${dspace.dir}/lib/dspace.jar"
         basedir="build/classes" />
  </target>
  
  
  <!-- ============================================================= -->
  <!-- Fresh install of config files                                 -->
  <!-- ============================================================= -->
  
  <!-- Writes the configuration files to ${dspace.dir}/config.  It does *not*
       run the install-configs script.  The "log4j.build.properties" file is
       copied to ${dspace.dir}/config so there's a simple log4j.properties
       file present for the initial run of "install-configs". -->
  <target name="init_configs">
    <copy todir="${dspace.dir}/config" preservelastmodified="true">
      <fileset dir="config"/>
    </copy>
    <copy file="etc/log4j.build.properties"
          tofile="${dspace.dir}/config/log4j.properties"
          preservelastmodified="true"/>
  </target>


  <!-- ============================================================= -->
  <!-- Create the database tables                                    -->
  <!-- ============================================================= -->

  <!-- We execute InitializeDatabase, passing in the simple log4j properties
    -  file in etc/ and the DSpace configuration file using system
    -  properties -->
  <target name="setup_database"
          depends="compile"
          description="Create database tables">
    <java classname="org.dspace.storage.rdbms.InitializeDatabase"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
      <arg value="etc/database_schema.sql"/>
    </java>
  </target>

  
  <!-- ============================================================= -->
  <!-- Remove the database tables                                    -->
  <!-- ============================================================= -->

  <!-- We execute InitializeDatabase, passing in the simple log4j properties
    -  file in etc/ and the DSpace configuration file using system
    -  properties -->
  <target name="clean_database"
          depends="compile"
          description="Removes DSpace database tables, destroying data">
    <java classname="org.dspace.storage.rdbms.InitializeDatabase"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
      <arg value="etc/clean-database.sql"/>
    </java>
  </target>


  <!-- ============================================================= -->
  <!-- Load the initial contents of the registries into the database -->
  <!-- ============================================================= -->

  <!-- Loads bitstream format and Dublin Core type registries -->
  <target name="load_registries"
          depends="compile"
          description="Load initial contents of registries">
    <java classname="org.dspace.administer.RegistryLoader"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
      <arg value="-bitstream"/>
      <arg value="${dspace.dir}/config/registries/bitstream-formats.xml"/>
    </java>
    <java classname="org.dspace.administer.RegistryLoader"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
      <arg value="-dc"/>
      <arg value="${dspace.dir}/config/registries/dublin-core-types.xml"/>
    </java>
  </target>


  <!-- ============================================================= -->
  <!-- Do a fresh system install                                     -->
  <!-- ============================================================= -->
  
  <target name="fresh_install"
          depends="install_code,build_wars,init_configs,setup_database,load_registries"
          description="Do a fresh install of the system, overwriting any data">
    <java classname="org.dspace.core.ConfigurationManager"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
      <arg value="-installTemplates"/>
    </java>    
    <java classname="org.dspace.browse.InitializeBrowse"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
    </java>
    <java classname="org.dspace.search.DSIndexer"
          classpathref="build.class.path"
          fork="yes"
          failonerror="yes">
      <sysproperty key="log4j.configuration" value="file:etc/log4j.build.properties"/>
      <sysproperty key="dspace.configuration" value="${config}"/>
    </java>
    <echo>
====================================================================
 The DSpace code has been installed, and the database initialized.
 
 To complete installation, you should do the following:
 
 * Install the DSpace UI (dspace.war) and OAI-PMH (dspace-oai.war)
   Web applications from the 'build' directory in the appropriate
   place for your servlet container.  e.g. '/opt/tomcat/webapps'

 * Make an initial administrator account (an e-person) in DSpace:
 
   ${dspace.dir}/bin/create-administrator
   
 * Start up your servlet container (Tomcat etc.)

 You should then be able to access your DSpace's 'home page':
 
   ${dspace.url}
 
 You should also be able to access the administrator UI:
 
   ${dspace.url}/dspace-admin
====================================================================
    </echo>
  </target>


  <!-- ============================================================= -->
  <!-- Clean source code                                             -->
  <!-- ============================================================= -->

  <target name="clean"
          description="Remove compiled files - does not affect installation">
    <delete dir="build" />
  </target>


  <!-- ============================================================= -->
  <!-- Create public API javadoc                                     -->
  <!-- ============================================================= -->
	
  <target name="public_api"
          description="Create the DSpace public API documentation with javadoc">
    <mkdir dir="build/public-api" />
    <javadoc sourcepath="src"
             destdir="build/public-api"
             author="true"
             version="true"
             access="public"
             doctitle="DSpace Public API"
             windowtitle="DSpace Public API"
             bottom="Copyright &#169; 2002 MIT and Hewlett-Packard. All Rights Reserved."
             overview="src/overview.html"
             classpathref="build.class.path">
      <package name="org.dspace.administer"/>
      <package name="org.dspace.authorize"/>
      <package name="org.dspace.browse"/>
      <package name="org.dspace.content"/>
      <package name="org.dspace.core"/>
      <package name="org.dspace.eperson"/>
      <package name="org.dspace.handle"/>
      <package name="org.dspace.history"/>
      <package name="org.dspace.search"/>
      <package name="org.dspace.storage.bitstore"/>
      <package name="org.dspace.storage.rdbms"/>
      <package name="org.dspace.workflow"/>
    </javadoc>
  </target>


  <!-- ============================================================= -->
  <!-- Create javadoc for everything                                 -->
  <!-- ============================================================= -->

  <target name="javadoc"
          description="Create the DSpace public API documentation with javadoc">
    <mkdir dir="build/javadoc" />
    <javadoc destdir="build/javadoc"
             author="true"
             version="true"
             doctitle="DSpace Source Javadoc"
             windowtitle="DSpace Source Javadoc"
             bottom="Copyright &#169; 2002 MIT and Hewlett-Packard. All Rights Reserved."
             overview="src/overview.html"
             classpathref="build.class.path">
      <packageset dir="src">
        <include name="**" />
      </packageset>
    </javadoc>
  </target>

</project>
