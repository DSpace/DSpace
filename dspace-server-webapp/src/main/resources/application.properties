#
# The contents of this file are subject to the license and copyright
# detailed in the LICENSE and NOTICE files at the root of the source
# tree and available online at
#
# http://www.dspace.org/license/
#

#
# Spring Boot's application.properties
#
# This properties file is used by Spring Boot to initialize its ApplicationContext and configure
# default Spring beans. It also uses the "dspace.dir" custom setting to locate your DSpace installation,
# and load all DSpace services and configurations.
#
# WARNING: Because this properties file initializes Spring Boot, it loads *before* any DSpace specific
# configurations/settings. Therefore settings in this file CANNOT depend on any DSpace configurations.
# The *only* DSpace configuration allowed in this file is "dspace.dir", which is documented below.
#
# Docs (including info on how to override these default settings)
#    http://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
# For common settings see:
#    http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#

########################
# DSpace Settings
#
# DSpace home/installation directory
# REQUIRED to be specified in this application.properties file, as it is used to locate and initialize
# the DSpace Kernel and all Services (including configuration). See org.dspace.app.rest.Application.getDSpaceHome()
# NOTE: this configuration is filled out by Apache Ant during the DSpace install/update process. It does NOT
# interact with or read its configuration from dspace.cfg.
dspace.dir=${dspace.dir}

########################
# Spring DATA Rest settings
#
spring.data.rest.basePath=

########################
# Jackson serialization settings
#
spring.jackson.serialization.fail-on-empty-beans=false

########################
# Internationalization
#
# Base Path for our messages file (i18n)
spring.messages.basename=i18n/messages
spring.messages.encoding=UTF-8

########################
# URI Encoding and Decoding
#
#
# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support.
spring.http.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses.
spring.http.encoding.force=true

###########################
# Embedded Tomcat Settings
#
# Change application port (for embedded Tomcat)
# Spring Boot app will be available at http://localhost:[server.port]/
server.port=8080

# Context path where application should be made available
# (Optional, defaults to root context)
#server.context-path=/spring-data-rest

# Error handling settings
# Always include the fullstacktrace in error pages
# Can be set to "never" if you don't want it.
server.error.include-stacktrace = always

######################
# Spring Boot Autoconfigure
#
# DISABLE a few autoconfiguration scripts, as DSpace initializes/configures these already
# * DataSourceAutoConfiguration (DB connection / datasource)
# * HibernateJpaAutoConfiguration (Hibernate ORM)
# * FlywayAutoConfiguration (Flyway migrations)
# * SolrAutoConfiguration (Solr)
# * Velocity (email templating)
#
# TODO: At some point we may want to investigate whether we can re-enable these and remove the custom DSpace init code
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, \
                             org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, \
                             org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, \
                             org.springframework.boot.autoconfigure.solr.SolrAutoConfiguration, \
                             org.springframework.boot.autoconfigure.velocity.VelocityAutoConfiguration

#########################
# Spring Boot Logging levels
#
#logging.level.org.springframework.boot=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR

#########################
# Log4J configuration
logging.config = ${dspace.dir}/config/log4j2.xml

# Maximum size of uploaded files in bytes (512Mb)
spring.http.multipart.max-file-size = 536870912

# Maximum size of a multipart request (512Mb)
spring.http.multipart.max-request-size= 536870912