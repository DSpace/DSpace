<?xml version="1.0" encoding="UTF-8"?>
<!--

    The contents of this file are subject to the license and copyright
    detailed in the LICENSE and NOTICE files at the root of the source
    tree and available online at

    http://www.dspace.org/license/

-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd"
    default-autowire-candidates="*Service,*DAO,javax.sql.DataSource">

    <context:annotation-config /> <!-- allows us to use spring annotations in beans -->

	<bean class="org.dspace.app.requestitem.RequestItemMetadataStrategy"
		id="org.dspace.app.requestitem.RequestItemAuthorExtractor">
	<!-- 
		Uncomment these properties if you want lookup in metadata the email and the name of the author to contact for request copy.
		If you don't configure that or if the requested item doesn't have these metadata the submitter data are used as fail over
		 
		<property name="emailMetadata" value="schema.element.qualifier" />
		<property name="fullNameMatadata" value="schema.element.qualifier" /> 
		
	-->	
	</bean>

    <!-- HelpDesk to instead get RequestItem emails-->
    <!--<bean class="org.dspace.app.requestitem.RequestItemHelpdeskStrategy"
        id="org.dspace.app.requestitem.RequestItemAuthorExtractor"></bean>-->

</beans>
