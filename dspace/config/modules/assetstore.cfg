#---------------------------------------------------------------#
#-----------------STORAGE CONFIGURATIONS------------------------#
#---------------------------------------------------------------#
# Configuration properties used by the bitstore.xml config file #
#                                                               #
#---------------------------------------------------------------#

# assetstore.dir, look at DSPACE/config/spring/api/bitstore.xml for more options
assetstore.dir = ${dspace.dir}/assetstore

# Configures the primary store to be local or S3.
# This value will be used as `incoming` default store inside the `bitstore.xml`
# Possible values are:
#     - 0: to use the `localStore`;
#     - 1: to use the `s3Store`. 
# If you want to add additional assetstores, they must be added to that bitstore.xml
# and new values should be provided as key-value pairs in the `stores` map of the
# `bitstore.xml` configuration. 
assetstore.index.primary = 0

#---------------------------------------------------------------#
#-------------- Amazon S3 Specific Configurations --------------#
#---------------------------------------------------------------#
# The below configurations are only used if the primary storename
# is set to 's3Store' or the 's3Store' is configured as a secondary store
# in your bitstore.xml

# Enables or disables the store initialization during startup, without initialization the store won't work.
# if changed to true, a lazy initialization will be tried on next store usage, be careful an exception could be thrown
assetstore.s3.enabled = false

# For using a relative path (xx/xx/xx/xxx...) set to true, default it false
# When true: it splits the path into subfolders, each of these
# are 2-chars (2-bytes) length, the last is the filename and could have
# at max 3-chars (3-bytes).
# When false: is used the absolute path using full filename. 
assetstore.s3.useRelativePath = false

# S3 bucket name to store assets in. If unspecified, by default DSpace will
# create a bucket based on the hostname of `dspace.ui.url` setting.
assetstore.s3.bucketName =

# Subfolder to organize assets within the bucket, in case this bucket
# is shared. Optional, default is root level of bucket
assetstore.s3.subfolder =

# please don't use root credentials in production but rely on the aws credentials default
# discovery mechanism to configure them (ENV VAR, EC2 Iam role, etc.)
# The preferred approach for security reason is to use the IAM user credentials, but isn't always possible.
# More information about credentials here: https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/credentials.html
# More information about IAM usage here: https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/java-dg-roles.html
assetstore.s3.awsAccessKey =
assetstore.s3.awsSecretKey =

# If the credentials are left empty,
# then this setting is ignored and the default AWS region will be used.
assetstore.s3.awsRegionName =


### JCloudSettings
# Configuration for JCloudstore, see config/spring/api/bitstore.xml for more options

# Enables or disables the JCloudstore asset store.
# Default: false
# assetstore.jcloud.enabled = false

# The provider for the remote Blob service. See for additional services
# https://jclouds.apache.org/reference/providers/
# Note configuration may require additional jar dependencies be added to dspace-api/pom.xml
# Examples: aws-s3, s3, filesystem, azureblob, google-cloud-storage
# Default: aws-s3
# assetstore.jcloud.provider = aws-s3

# Identity or key for remote store
# Examples: awsAccessKey
# Default: (empty) requirement depends on service provider
# assetstore.jcloud.identity =

# Credentials or secret key for JCloudstore.
# Examples: awsSecretKey
# This key is used in conjunction with the identity to authenticate with remote service.
# Default: (empty) requirement depends on service provider
# assetstore.jcloud.credentials =

# The endpoint URL for the S3 service.
# Example: when using "s3" and third party provider such as Minio, https://s3.myprovider.com
# Default: (empty) requirement depends on service provider
# assetstore.jcloud.endpoint =

# The name of the container (S3 Bucket) to use for storing assets.
# Default: (empty) requirement depends on service provider
# assetstore.jcloud.container =

# Specifies a subfolder within the container for storing assets
# Default: (empty)
# assetstore.jcloud.subfolder =

# Determines whether to use relative hash paths (12/34/56/1234567..) for storing bitstreams
# Default: false
# assetstore.jcloud.useRelativePath = false

# The maximum counter value for S3 operations.
# Default: -1 (unlimited) connection is never manualy closed in BitstoreService
# assetstore.jcloud.maxCounter = -1
