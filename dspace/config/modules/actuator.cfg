
#---------------------------------------------------------------#
#------------SPRING BOOT ACTUATOR CONFIGURATION-----------------#
#---------------------------------------------------------------#

# Health endpoint configuration, for more details see https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html#actuator.endpoints.health

## Configuration to establish when show the health status details
management.endpoint.health.show-details = when-authorized
## Configuration which users can see the health status details
management.endpoint.health.roles = ADMIN
## Configuration to establis
management.endpoint.health.status.order= down, out-of-service, up-with-issues, up, unknown
## Configuration that enables only health and info endpoints
management.endpoints.web.exposure.include=health,info

## Configuration to set 200 as status of health http response when it is DOWN or OUT_OF_SERVICE
## The DSpace UI requires these be set to 200 in order to support health status reports when services are down.
management.endpoint.health.status.http-mapping.down = 200
management.endpoint.health.status.http-mapping.out-of-service = 200

management.health.ping.enabled = false
management.health.diskSpace.enabled = false

# CORS configuration for all actuators
management.endpoints.web.cors.allowed-origins = ${rest.cors.allowed-origins}
management.endpoints.web.cors.allowed-methods = *
management.endpoints.web.cors.allowed-headers = Accept, Authorization, Content-Type, Origin, X-On-Behalf-Of, X-Requested-With, X-XSRF-TOKEN, X-CORRELATION-ID, X-REFERRER
management.endpoints.web.cors.exposed-headers = Authorization, DSPACE-XSRF-TOKEN, Location, WWW-Authenticate
management.endpoints.web.cors.allow-credentials = true

#---------------------------------------------------------------#
#------------------------INFO ENDPOINT--------------------------#
#---------------------------------------------------------------#

# All properties under the info key will be automatically exposed by the info actuator with a json structure. Furthermore, it is possible to 
# enrich the content of the response given by the info actuator by defining in the Spring context beans of classes that implements InfoContributor.

management.info.env.enabled = true
management.info.java.enabled = true

info.app.name = ${dspace.name}
info.app.version = ${dspace.version}
info.app.dir = ${dspace.dir}
info.app.url = ${dspace.server.url}
info.app.db = ${db.url}
info.app.solr.server = ${solr.server}
info.app.solr.prefix = ${solr.multicorePrefix}
info.app.mail.server = ${mail.server}
info.app.mail.from-address = ${mail.from.address}
info.app.mail.feedback-recipient = ${feedback.recipient}
info.app.mail.mail-admin = ${mail.admin}
info.app.mail.mail-helpdesk = ${mail.helpdesk}
info.app.mail.alert-recipient = ${alert.recipient}

info.app.cors.allowed-origins = ${rest.cors.allowed-origins}

info.app.ui.url = ${dspace.ui.url}
