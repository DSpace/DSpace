#---------------------------------------------------------------#
#----------------REQUEST ITEM CONFIGURATION---------------------#
#---------------------------------------------------------------#

# Configuration of request-item. Possible values:
# all - Anonymous users can request an item
# logged - Login is mandatory to request an item
# empty/commented out - request-copy not allowed
request.item.type = all

# Should all Request Copy emails go to the helpdesk instead of the item submitter?
request.item.helpdesk.override = false

# Should a rejection of a copy request send an email back to the requester?
# Defaults to "true", which means a rejection email is sent back.
# Setting it to "false" results in a silent rejection.
request.item.reject.email = true

# Bundles to use when granting access and inspecting file size, if "all files" is indicated.
# This supports multiple values. To specify multiple bundles, separate them with a comma
# or (preferred) repeat the configuration property with additional values.
# Default: ORIGINAL
request.item.grant.bundles = ORIGINAL
#request.item.grant.bundles = PRESERVATION

# Prior to DSpace 9.0, all granted requests would send the file as an attachment.
# If a secure web link to the bitstream(s) should be sent when files are over a certain file
# size threshold, enable the following property
# Default: true
request.item.grant.link = true

# If request.item.grant.link is enabled, you can specify a minimum file size (in megabytes) to use as
# a threshold, or else the default attachment functionality will be used instead.
# If 'all files' was indicated in the request, this threshold will be activated if any of the files
# meet the configured size minimum.
# To send links instead of attachments for all files, set this property to 0.
# Default: 20
request.item.grant.link.filesize = 20

# Valid access periods, in seconds, to allow the approver to select when using links.
# These are presented to users with friendly labels via i18n keys in the angular frontend.
# These should be in a format like +<n><unit>, where <n> is the number of units and <unit> is one of
# "DAYS", MONTHS", "YEARS". (or singular if n=1).
# The default is FOREVER, which will set a very distant expiry date for permanent access.
# The first access period in the list will be the default option in the grant form dropdown.
# To configure displayed labels, edit the angular .json5 i18n assets to include keys
# beginning with "grant-request-copy.access-period." and ending in the period, e.g.:
#   "grant-request-copy.access-period.+1DAY": "1 day",
#   "grant-request-copy.access-period.+7DAYS": "1 week",
#   "grant-request-copy.access-period.+1MONTH": "1 month",
#   "grant-request-copy.access-period.+3MONTHS": "3 months",
#   "grant-request-copy.access-period.FOREVER": "Forever",
request.item.grant.link.period = FOREVER
request.item.grant.link.period = +1DAY
request.item.grant.link.period = +7DAYS
request.item.grant.link.period = +1MONTH
request.item.grant.link.period = +3MONTHS

# Date format to use for the access expiry date in the grant email
request.item.grant.link.dateformat = yyyy-MM-dd
#request.item.grant.link.dateformat = dd/MM/yyyy HH:mm:ss
#request.item.grant.link.dateformat = MM/dd/yy

# Require a captcha for item request creation
# Note, this requires altcha.cfg to be configured with a valid HMAC key
# Default: false
#request.item.create.captcha=false
