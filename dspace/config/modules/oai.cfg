#---------------------------------------------------------------#
#---------------------OAI CONFIGURATIONS------------------------#
#---------------------------------------------------------------#
# These configs are used by the OAI-PMH interface               #
#---------------------------------------------------------------#

# Whether or not to enable the OAI module
# When "true", the OAI module is accessible on ${oai.path}
# When "false" or commented out, OAI is disabled/inaccessible.
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
oai.enabled = true

# Path where OAI module is available
# Defaults to "oai", which means the OAI module would be available
# at ${dspace.server.url}/oai/
# (Requires reboot of servlet container, e.g. Tomcat, to reload)
oai.path = oai

# Storage: solr | database (solr is recommended)
oai.storage=solr

# The base URL of the OAI webapp (do not include the context e.g. /request, /openaire, etc).
# Note: Comment out if you want to fallback to the request's URL.
oai.url = ${dspace.server.url}/${oai.path}

# Base solr index
oai.solr.url=${solr.server}/${solr.multicorePrefix}oai

# OAI persistent identifier prefix
# This field is used for two purposes:
#   1. As your OAI-PMH <repositoryIdentifier>
#   2. As the prefix for all Identifiers in OAI-PMH (Format is "oai:${oai.identifier.prefix}:${handle.prefix}")
# The OAI-PMH spec requires this prefix to correspond to your site's hostname. Therefore, by default,
# DSpace will set this configuration to the hostname from your ${dspace.ui.url} configuration.
# However, you may override that default value by uncommenting this configuration.
# oai.identifier.prefix = YOUR_SITE_HOSTNAME

# Base url for bitstreams
oai.bitstream.baseUrl = ${dspace.ui.url}

# Base Configuration Directory
oai.config.dir = ${dspace.dir}/config/crosswalks/oai

# Description
oai.description.file = ${dspace.dir}/config/crosswalks/oai/description.xml

# Cache enabled?
oai.cache.enabled = true

# Base Cache Directory
oai.cache.dir = ${dspace.dir}/var/oai

#---------------------------------------------------------------#
#--------------OAI IMPORT CONFIGURATION ------------------------#
#---------------------------------------------------------------#

# Size of batches to commit to solr at a time
oai.import.batch.size = 1000

#---------------------------------------------------------------#
#--------------OAI HARVESTING CONFIGURATIONS--------------------#
#---------------------------------------------------------------#
# These configs are only used by the OAI-ORE related functions  #
#---------------------------------------------------------------#

### Harvester settings

# Crosswalk settings; the {name} value must correspond to a declared ingestion crosswalk
# oai.harvester.metadataformats.{name} = {namespace},{optional display name}
oai.harvester.metadataformats.dc = http://www.openarchives.org/OAI/2.0/oai_dc/\, Simple Dublin Core
oai.harvester.metadataformats.qdc = http://purl.org/dc/terms/\, Qualified Dublin Core
oai.harvester.metadataformats.dim = http://www.dspace.org/xmlns/dspace/dim\, DSpace Intermediate Metadata

# This field works in much the same way as oai.harvester.metadataformats.PluginName
# The {name} must correspond to a declared ingestion crosswalk, while the
# {namespace} must be supported by the target OAI-PMH provider when harvesting content.
# oai.harvester.oreSerializationFormat.{name} = {namespace}

# Determines whether the harvester scheduling process should be started
# automatically when the DSpace webapp is deployed.
# default: false
oai.harvester.autoStart=false

# Amount of time subtracted from the "from" argument of the OAI-PMH request to account
# for the time taken to negotiate a connection. Measured in seconds. Default value is 120.
#oai.harvester.timePadding = 120

# How frequently the harvest scheduler checks the remote provider for updates,
# measured in minutes. The default vaule is 12 hours (or 720 minutes)
#oai.harvester.harvestFrequency = 720

# The heartbeat is the frequency at which the harvest scheduler queries the local
# database to determine if any collections are due for a harvest cycle (based on
# the harvestFrequency) value. The scheduler is optimized to sleep after the check until the
# next collection is actually ready to be harvested. The minHeartbeat and
# maxHeartbeat are the lower and upper bounds on this timeframe. Measured in seconds.
# Default minHeartbeat is 30.  Default maxHeartbeat is 3600.
#oai.harvester.minHeartbeat = 30
#oai.harvester.maxHeartbeat = 3600

# How many harvest process threads the scheduler can spool up at once. Default value is 3.
#oai.harvester.maxThreads = 3

# How much time passess before a harvest thread is terminated. The termination process
# waits for the current item to complete ingest and saves progress made up to that point.
# Measured in hours. Default value is 24.
#oai.harvester.threadTimeout = 24

# When harvesting an item that contains an unknown schema or field within a schema what
# should the harvester do? Either add a new registry item for the field or schema, ignore
# the specific field or schema (importing everything else about the item), or fail with
# an error. The default value if undefined is: fail.
# Possible values: 'fail', 'add', or 'ignore'
oai.harvester.unknownField  = add
oai.harvester.unknownSchema = fail

# The webapp responsible for minting the URIs for ORE Resource Maps.
# If using oai, the dspace.oai.uri config value must be set.
# The URIs generated for ORE ReMs follow the following convention for both cases.
# format: [baseURI]/metadata/handle/[theHandle]/ore.xml
# Default value is oai
#oai.ore.authoritative.source = oai

# A harvest process will attempt to scan the metadata of the incoming items
# (dc.identifier.uri field, to be exact) to see if it looks like a handle.
# If so, it matches the pattern against the values of this parameter.
# If there is a match the new item is assigned the handle from the metadata value
# instead of minting a new one. Default value: hdl.handle.net
#oai.harvester.acceptedHandleServer = hdl.handle.net, handle.myu.edu

# Pattern to reject as an invalid handle prefix (known test string, for example)
# when attempting to find the handle of harvested items. If there is a match with
# this config parameter, a new handle will be minted instead. Default value: 123456789.
#oai.harvester.rejectedHandlePrefix = 123456789, myTestHandle
