## File for changes to dspace.cfg - separated from original configuration file to see what we changed
# one day similar to this
# https://github.com/ufal/clarin-dspace/blob/clarin/utilities/project_helpers/config/local.conf.dist

#------------------------------------------------------------------#
#---------------------------UPLOAD FILE----------------------------#
#------------------------------------------------------------------#

# Maximum size of a single uploaded file
# The file bigger than maximum upload size could be uploaded by adding file URL to the
# `local.bitstream.redirecToURL` metadata in the submission UI process.
spring.servlet.multipart.max-file-size = 4GB

# Maximum size of a multipart request (i.e. max total size of all files in one request)
spring.servlet.multipart.max-request-size = 4GB

#------------------------------------------------------------------#
#---------------------------PID CONFIG-----------------------------#
#------------------------------------------------------------------#

# PID service
# type o service; for now only epic and epic2 are supported
lr.pid.service.type = epic2
lr.pid.service.url = https://handle.gwdg.de/pidservice/
lr.pid.service.user =
lr.pid.service.pass =

# per community pid configurations for pid prefixes of the format:
# community=<community ID>,prefix=<prefix>,alternative_prefixes=<pipeline separated list of alternative prefixes>,type=<local|epic>,canonical_prefix=<URL of handle>,subprefix=<subprefix>
# community=<community ID> is required
# multiple configurations can be added using a new configuration line
# default configuration should have asterisk as the community ID
# subprefix is only used for local handles
lr.pid.community.configurations = community=47501cdc-e2eb-44e5-85e0-89a31dc8ceee, prefix=123456789, type=epic, canonical_prefix=http://hdl.handle.net/, subprefix=1
lr.pid.community.configurations = community=09f09b11-cba1-4c43-9e01-29fe919991ab, prefix=123456789, type=epic, canonical_prefix=http://hdl.handle.net/, subprefix=2
lr.pid.community.configurations = community=*, prefix=123456789, type=epic, canonical_prefix=http://hdl.handle.net/, subprefix=2
# if true, PID metadata will be filled with object metadata like title
lr.pid.resolvemetadata = true

######
#
# Shortener
#
#####
# shortener.enabled = ${lr.shortener.enabled}
shortener.handle.prefix = 1234
# separate the patterns with ; that is less likely to appear as pattern char
shortener.post.url.blacklist.regexps = .*://.\{1,15\}
shortener.post.host.whitelist.regexps = (.*\\.)?google\\.com
shortener.post.host.blacklist.regexps = .*\\.com;.*\\.xyz;.*\\.ga;.*\\.br;.*\\.app
shortener.post.error = Data POSTed by you didn't pass the validation. Please check that you've supplied the title, \
the email and the url is not on *.com domain and the part after schema:// is longer than 15 chars

##### HELP DESK #####
# `lr.help.mail` is exposed to the FE - must be set as exposed

rest.properties.exposed = lr.help.mail,authentication-shibboleth.netid-header,authentication-shibboleth.email-header,authentication-shibboleth.firstname-header,authentication-shibboleth.lastname-header,dspace.name,versioning.item.history.include.submitter,statistics.cache-server.uri,dspace.ui.url
lr.help.mail = test@test.sk
lr.help.phone = 0000

# Admin could upload the file bigger than maximum upload size.
# Should be this big file deleted from the '/temp' folder?
delete.big.file.after.upload = true


##### BITSTREAM DOWNLOAD #####
bitstream.download.token.expiration.days = 15

##### VALIDATION #####
# Whether or not we REQUIRE that a distribution license must be accepted
# during the 'ClarinLicenseDistribution' step in the submission process
# Defaults to true; If set to 'false'
webui.submit.distribution.license.required = true

### Add user to the groups ###
#attribute -> group mapping
#check shibboleth attribute ATTR and put users having value ATTR_VALUE1 and ATTR_VALUE2 to GROUP1
#users having ATTR_VALUE3 to GROUP2
#groups must exist
#authentication-shibboleth.header.ATTR=ATTR_VALUE1=>GROUP1,ATTR_VALUE2=>GROUP1,ATTR_VALUE3=>GROUP2
#examples:
authentication-shibboleth.header.entitlement = staff@org1297.mff.cuni.cz => UFAL_MEMBER,urn:cuni:affiliation:staff@mff.cuni.cz => CUNI_STAFF,urn:mace:eduid.cz:affiliation:interrupted-student => INTERRUPTED_STUDENTS
authentication-shibboleth.header.unscoped-affiliation = member => MEMBERS, staff=> STAFF, employee => EMPLOYEES, alum => ALUMS

# The shibboleth header to do role-based mappings
# UFAL: To automatically choose role you have to specify attribute which is looking at
#       see ShibGroup.java
authentication-shibboleth.role-header = entitlement

# Whether to ignore the attribute's scope or value.
# scope is the part after @
authentication-shibboleth.role-header.ignore-scope = false
authentication-shibboleth.role-header.ignore-value = true

##### CLARIN Shibboleth Settings ######

# Group for all who log through shibboleth, the group must exist in dspace
authentication-shibboleth.default.auth.group = Authenticated

# Default group for UFAL members
# - if "ufal.mff.cuni.cz" matches the scoped organisation header,
#   the user will get automatically into UFAL group
authentication-shibboleth.role.ufal.mff.cuni.cz = UFAL

# Possible Authorizations for the user. If the user is added to the group, the authorization must be added too.
# Authorization is assigned to the user in the `EPersonRestAuthenticationProvider` class.
authentication-shibboleth.clarin.custom.groups = UFAL,UFAL_MEMBER


###############
#
# featured services config
#
###############
featured.services = pmltq,kontext,teitok
featured.service.kontext.fullname = KonText
featured.service.kontext.url = http://lindat.mff.cuni.cz/services/kontext
featured.service.kontext.description = KonText is a basic web application for querying corpora
featured.service.pmltq.fullname = PML-TQ
featured.service.pmltq.url = https://lindat.mff.cuni.cz/services/pmltq/
featured.service.pmltq.description = Tool for searching and browsing treebanks online
featured.service.teitok.fullname = TEITOK
featured.service.teitok.url = https://lindat.mff.cuni.cz/services/teitok/
featured.service.teitok.description = A web-based platform for viewing, creating, and editing corpora


##### Shibboleth #####
# File where is DiscoJuiceFeed response
shibboleth.discofeed.url = https://lindat.mff.cuni.cz/Shibboleth.sso/DiscoFeed

# Configuration properties for DiscoJuice
discojuice.feeds = edugain, dfn, cesnet, surfnet2, haka, kalmar
# CRON job refresh time definition - default is refresh in every 2 hours.
discojuice.refresh = 0 */2 * * * ?
# Comma separated list of entityIDs; we try to guess country on these
discojuice.rewriteCountries = https://idp.scc.kit.edu/idp/shibboleth, https://fedauth.london.edu/oala/metadata, https://youidlite.youid.net/idp/shibboleth, https://cavle.org/shibboleth


##### Matomo statistics #####
# Auth token
matomo.track.enabled = true
matomo.auth.token = 26388b4164695d69e6ee6e2dd527b723
matomo.site.id = 1
matomo.tracker.bitstream.site_id = 1
matomo.tracker.oai.site_id = 1
statistics.cache-server.uri = http://cache-server.none


##### Importing #####
import.metadata.field.not.update = dc.description.provenance, dc.date.available, dc.date.accessioned, dc.identifier.uri
