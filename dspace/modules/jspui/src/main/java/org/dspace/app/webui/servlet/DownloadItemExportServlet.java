package org.dspace.app.webui.servlet;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang3.math.NumberUtils;
import org.dspace.authorize.AuthorizeException;
import org.dspace.content.Item;
import org.dspace.core.Context;
import org.dspace.export.ItemExportDTO;
import org.dspace.export.ItemExportFormats;
import org.dspace.export.domain.ExportType;

/**
 * Handle requests for exportation of items into files.
 * 
 * @author MÃ¡rcio Ribeiro Gurgel do Amaral (marcio.rga@gmail.com)
 *
 */
public class DownloadItemExportServlet extends DSpaceServlet {

	private static final long serialVersionUID = 4066937582345487265L;

	/**
	 * @see DSpaceServlet#doDSGet(Context, HttpServletRequest, HttpServletResponse)
	 */
	@Override
	protected void doDSGet(Context context, HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException,
			SQLException, AuthorizeException {
		
		String itemId = request.getParameter("itemId");
		String format = request.getParameter("format");
		
		/** Foi solicitado download de arquivo **/
		if(itemId != null && format != null && NumberUtils.isNumber(itemId))
		{
			ExportType exportType = ExportType.valueOf(format);
			
			if(exportType != null)
			{
				Item item = Item.find(context, Integer.valueOf(itemId));
				ItemExportDTO processedFile = new ItemExportFormats().process(item, exportType);
				
				if(processedFile != null && !processedFile.getFileContent().isEmpty())
				{
					doDownload(response, processedFile, exportType);
				}
			}
		}
				
	}

	
	/**
	 * Do routine for downloading the file generated by {@link ItemExportFormats#process(Item, ExportType)}
	 * @param response Servlet HTTP response
	 * @param processedFile.getFileContent() String representing file contents
	 * @param exportType Export format (endonte, etc..)
	 * @throws IOException
	 * @throws FileNotFoundException
	 */
	private void doDownload(HttpServletResponse response, ItemExportDTO processedFile, ExportType exportType) throws IOException,
			FileNotFoundException {
		
		ServletOutputStream servletOutputStream = response.getOutputStream();
		
		response.setContentType("text/plain");
		response.setContentLength((int) processedFile.getFileContent().getBytes().length);
		
		StringBuilder contentDispositionBuilder = new StringBuilder();
		contentDispositionBuilder.append("attachment; filename=\"");
		contentDispositionBuilder.append(processedFile.getFileName());
		if(exportType.getFormat() != null && !exportType.getFormat().isEmpty())
		{
			contentDispositionBuilder.append(".");
			contentDispositionBuilder.append(exportType.getFormat());
		}
		contentDispositionBuilder.append("\"");
		
		/** Forces item download **/
		response.setHeader("Content-Disposition", contentDispositionBuilder.toString());
		
		servletOutputStream.write(processedFile.getFileContent().getBytes());
		
		servletOutputStream.close();
	}

}
