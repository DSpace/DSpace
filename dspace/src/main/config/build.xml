<?xml version="1.0"?>
<!--

    The contents of this file are subject to the license and copyright
    detailed in the LICENSE and NOTICE files at the root of the source
    tree and available online at

    http://www.dspace.org/license/

-->
<!--
  - DSpace installer scripts
  -->

<project name="DSpace" default="help">

    <!-- ============================================================= -->
    <!-- Description                                                   -->
    <!-- ============================================================= -->

    <description>
====================== DSpace platform build file ======================

Common usage:

  Fresh install of DSpace:
    % ant fresh_install

  Update existing installation, leaving data and configuration intact:
    % ant -Dconfig=/installdir/config/dspace.cfg update

========================================================================
    </description>

    <!-- DS-1391: Ant 1.8.0+ is required, fail if not available. -->
    <fail message="Ant 1.8.0+ is required, ${ant.version} is not supported">
        <condition>
            <not>
                <antversion atleast="1.8.0"/>
            </not>
        </condition>
    </fail>

    <!-- ============================================================= -->
    <!-- Will be using various environment variables                   -->
    <!-- ============================================================= -->
    <property environment="env" />


    <!-- ============================================================= -->
    <!-- Build parameters that are likely to need tweaking             -->
    <!-- ============================================================= -->

    <!-- Default overwrite to true. This may be overridden. -->
    <condition property="overwrite" value="true">
        <not>
            <isset property="overwrite"/>
        </not>
    </condition>

    <!-- Default configurations to use.  This may be overridden. -->
    <!-- First, the default localized config file -->
    <property name="local-config" value="config/local.cfg" />
    <!-- Next, the default dspace.cfg -->
    <property name="config" value="config/dspace.cfg" />
    <property name="irus-config" value="config/modules/irus-statistics.cfg" />

    <!-- Give user a chance to override without editing this file
       (and without typing -D each time they compiles it) -->
    <property file="${user.home}/.dspace.properties" />

    <!-- Load the configurations -->
    <!-- In Ant, properties are immutable, so the first one "wins". In this case,
         we load the local.cfg FIRST, so that its settings are used by default. -->
    <property file="${local-config}" />
    <property file="${config}" />
    <property file="${irus-config}" />

    <!-- Timestamp date used when creating backup directories -->
    <tstamp>
        <format property="build.date" pattern="yyyyMMdd-HHmmss" />
    </tstamp>


    <!-- ============================================================= -->
    <!-- The DSpace class path for executing installation targets      -->
    <!-- ============================================================= -->

    <!-- We will include the environment CLASSPATH -->
    <path id="class.path">
        <pathelement path="${env.CLASSPATH}" />
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <!-- ============================================================= -->
    <!-- Load various Ant libraries which define extra tasks.          -->
    <!-- ============================================================= -->
    <!--Load/initialize all Ant-Contrib libraries from DSpace 'class.path' above.
         For more info, see:
        http://ant-contrib.sourceforge.net/tasks/index.html -->
    <taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="class.path"/>

    <!-- ============================================================= -->
    <!-- Print some useful help text.                                  -->
    <!-- ============================================================= -->
    <target name="help">

        <echo message="" />
        <echo message="DSpace configuration file" />
        <echo message="-----------------------------------" />
        <echo message="" />
        <echo message="Available targets are:" />
        <echo message="" />
        <echo message="update          --> Update ${dspace.dir} config, etc, lib and web applications without " />
        <echo message="                    touching your data" />
    	<echo message="update_configs  --> Update your configs directory with new configuration files"/>
        <echo message="update_spiders  --> Dowload and install Spider Robots database into ${dspace.dir}/config" />
        <echo message="update_code     --> Update compiled code (bin, lib, and etc directories)" />
        <echo message="update_webapps  --> Update web applications" />
        <echo message="" />
        <echo message="init_configs    --> Write the configuration files to ${dspace.dir}/config" />
        <echo message="install_code    --> Install compiled code into ${dspace.dir}" />
        <echo message="" />
        <echo message="fresh_install   --> Perform a fresh installation of the software. " />
        <echo message="" />
        <echo message="clean_backups   --> Remove .bak directories under install directory" />
        <echo message="test_database   --> Attempt to connect to the DSpace database in order to verify that configuration is correct" />
        <echo message="" />
        <echo message="" />
        <echo message="Available parameters are:" />
        <echo message="" />
        <echo message="-Dconfig=&lt;path/to/dspace.cfg&gt;  -- Where your dspace.cfg configuration" />
        <echo message="                                  is located" />
    	<echo message="-Doverwrite=false              -- Will force update_configs to no longer copy existing"/>
    	<echo message="                                  config to .old files when they conflict with"/>
    	<echo message="                                  the new config.  Instead, new conflicting"/>
    	<echo message="                                  file with be suffixed with .new."/>

        <echo message="-Dwars=true                    -- Build .war files when updating web" />
        <echo message="                                  applications" />
        <echo message="" />

    </target>


    <!-- ============================================================= -->
    <!-- clean out backup directories                                  -->
    <!-- ============================================================= -->
    <target name="clean_backups">
        <delete includeemptydirs="true">
            <fileset dir="${dspace.dir}" includes="lib.bak-**/**" />
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${dspace.dir}" includes="etc.bak-**/**" />
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${dspace.dir}" includes="webapps.bak-**/**" />
        </delete>
        <delete includeemptydirs="true">
            <fileset dir="${dspace.dir}" includes="bin.bak-**/**" />
        </delete>
    </target>

    <!-- ============================================================= -->
    <!-- Update an installation                                        -->
    <!-- ============================================================= -->

    <target name="update"
            depends="update_configs,update_code,test_database,update_webapps"
            description="Update installed code and web applications (without clobbering data/config)">
    </target>

    <!-- ============================================================= -->
    <!-- Update the config dir, only adds files, if a file is altered  -->
    <!-- in the target directory, the new file is suffixed wth *.new   -->
    <!-- and should be hand updated afterward.                         -->
    <!-- ============================================================= -->
    <target name="update_configs"
            depends="overwrite_configs,overwrite_solr_configs"
            description="Updates the Configuration Directory">
        <antcall target="init_spiders" />
    </target>

    <target name="overwrite_configs" description="Overwrites a configuration directory." if="${overwrite}" depends="copy_configs_keep">

        <!--
        Copy files that are absent in target
        -->
        <copy todir="${dspace.dir}/config" preservelastmodified="true">
            <fileset dir="config-temp" includes="**/*">
                <present present="srconly" targetdir="${dspace.dir}/config" />
            </fileset>
        </copy>

        <!--
        Copy files that are different in target to *.old suffix
        -->
        <copy todir="${dspace.dir}/config" preservelastmodified="true" overwrite="true">
                <fileset dir="${dspace.dir}/config">
                   <and>
                    <different targetdir="config-temp" ignoreFileTimes="true" />
                    <present present="both" targetdir="config-temp" />
                   </and>
                    <type type="file" />
                </fileset>
            <globmapper from="*" to="*-${build.date}.old" />
        </copy>

        <!--
        Force overwrite of whats left
        -->
        <copy todir="${dspace.dir}/config" preservelastmodified="true" overwrite="true">
            <fileset dir="config-temp">
                <different targetdir="${dspace.dir}/config" ignoreFileTimes="true" />
                <type type="file" />
            </fileset>
        </copy>

        <!--
        Remove the work directory
        -->
        <delete dir="config-temp" />

        <echo>
====================================================================
 The DSpace configuration has been updated.

 During the upgrade process the build has attempted to overwrite the
 previous configuration while preserving your previous changes in files
 suffixed "*.old"

 To complete installation, you should do the following:

 * Check that you've properly merged any differences in the following files:

        </echo>

        <fileset dir="${dspace.dir}/config" id="config.files">
              <include name="**/*.old"/>
        </fileset>

        <pathconvert pathsep="${line.separator}" property="configfiles" refid="config.files"/>

        <echo>${configfiles}</echo>

        <echo>

  * To properly merge your previous configuration files, it's
    best to try to take the newer version and copy your
    previous changes into it.
====================================================================
        </echo>

    </target>

    <target name="copy_configs_keep" unless="${overwrite}" depends="prepare_configs">

        <!--
        Copy files that are absent in target
        -->
        <copy todir="${dspace.dir}/config" preservelastmodified="true">
            <fileset dir="config-temp" includes="**/*">
                <present present="srconly" targetdir="${dspace.dir}/config" />
            </fileset>
        </copy>

        <!--
        Copy files that are different to target to *.new suffix
        -->
        <copy todir="${dspace.dir}/config" preservelastmodified="true">
            <fileset dir="config-temp">
                <different targetdir="${dspace.dir}/config" ignoreFileTimes="true" />
                <type type="file" />
            </fileset>
            <globmapper from="*" to="*.new" />
        </copy>

        <!--
            Remove the work directory
            -->
        <delete dir="config-temp" />

        <echo>
====================================================================
 The DSpace configuration has been updated.

 During the upgrade process the build has preserved your original
 configuration and placed any conflicting new files next to your
 original suffixed with the "*.new" extension.

 To complete installation, you should do the following:

 * Check that you've properly merged any differences in the following files:

        </echo>

        <fileset dir="${dspace.dir}/config" id="config.files">
              <include name="**/*.new"/>
        </fileset>

        <pathconvert pathsep="${line.separator}" property="configfiles" refid="config.files"/>

        <echo>${configfiles}</echo>

        <echo>

  * To properly merge your previous configuration files, it's
    best to try to take the newer version and copy your
    previous changes into it. Delete the old and remove the
    ".new" suffix from the new file.

====================================================================
        </echo>

    </target>

    <target name="prepare_configs" description="Updates a configuration directory.">

        <mkdir dir="config-temp" />

        <!--
        Copy over all config files (not including dspace.cfg)
        -->
        <copy todir="config-temp" preservelastmodified="true" overwrite="true" failonerror="false">
            <fileset dir="config" excludes="dspace.cfg" />
        </copy>

        <!--
        Copy designated dspace.cfg
        -->
        <copy file="${config}" tofile="config-temp/dspace.cfg" preservelastmodified="true" />

        <!--
        If designated config isn't the one in config/dspace.cfg then lets put a copy of that next to it
        -->
        <copy todir="config-temp" preservelastmodified="true" overwrite="true" >
            <fileset dir="config" includes="dspace.cfg">
                <different targetdir="${dspace.dir}/config" ignoreFileTimes="true" />
            </fileset>
            <globmapper from="*" to="*.default" />
        </copy>

        <!-- Finally, filter some very specific configuration files, which cannot
             be managed by DSpace's configuration service. NOTE: please refrain
             from appending files to this list unless ABSOLUTELY NECESSARY.
             MOST config files are now auto-interpolated at runtime and don't need filtering! -->
        <copy todir="config-temp" preservelastmodified="true" overwrite="true" failonerror="false">
            <fileset dir="config">
                <!-- Filter all log4j files, as log4j requires absolute paths
                     to its log files. In addition, log4j strongly prefers
                     autoconfiguring itself (e.g. see DS-3104). -->
                <include name="log4j*.properties"/>
                <include name="log4j2*.xml"/>
                <!-- Filter sample Tomcat context.xml -->
                <include name="default.context.xml"/>
                <!-- Filter RDF configs as these are TTL files -->
                <include name="modules/rdf/*.ttl"/>
            </fileset>
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <echo file='config-temp/ant.properties' message='ant.version = ${ant.version}'/>

    </target>

    <target name="overwrite_solr_configs"
            description="Overwrites a configuration directory."
            if="${overwrite}"
            depends="copy_solr_configs_keep">

        <!--
        Copy files that are absent in target
        -->
        <copy todir="${dspace.dir}/solr" preservelastmodified="true">
            <fileset dir="solr-config-temp" includes="**/*">
                <and>
                   <present present="srconly" targetdir="${dspace.dir}/solr" />
                   <!-- acts like <exclude name="**/data/**"/> -->
                   <filename negate="true" name="**/data/**"/>
                </and>
            </fileset>
        </copy>

        <!--
        Copy files that are different in target to *.old suffix
        -->
        <copy todir="${dspace.dir}/solr" preservelastmodified="true" overwrite="true">
                <fileset dir="${dspace.dir}/solr">
                   <and>
                    <different targetdir="solr-config-temp" ignoreFileTimes="true" />
                    <present present="both" targetdir="solr-config-temp" />
                    <!-- acts like <exclude name="**/data/**"/> -->
                    <filename negate="true" name="**/data/**"/>
                   </and>
                   <type type="file" />
                </fileset>
            <globmapper from="*" to="*-${build.date}.old" />
        </copy>

        <!--
        Force overwrite of whats left
        -->
        <copy todir="${dspace.dir}/solr" preservelastmodified="true" overwrite="true">
            <fileset dir="solr-config-temp">
                <and>
                    <different targetdir="${dspace.dir}/solr" ignoreFileTimes="true" />
                    <!-- acts like <exclude name="**/data/**"/> -->
                    <filename negate="true" name="**/data/**"/>
                </and>
                <type type="file" />
            </fileset>
        </copy>

        <!--
        Remove the work directory
        -->
        <delete dir="solr-config-temp" />

        <echo>
====================================================================
 The DSpace configuration has been updated.

 During the upgrade process the build has attempted to overwrite the
 previous configuration while preserving your previous changes in files
 suffixed "*.old"

 To complete installation, you should do the following:

 * Check that you've properly merged any differences in the following files:

        </echo>

        <fileset dir="${dspace.dir}/solr" id="config.files">
              <include name="**/*.old"/>
        </fileset>

        <pathconvert pathsep="${line.separator}" property="configfiles" refid="config.files"/>

        <echo>${configfiles}</echo>

        <echo>

  * To properly merge your previous configuration files, it's
    best to try to take the newer version and copy your
    previous changes into it.
====================================================================
        </echo>

    </target>

    <target name="copy_solr_configs_keep" unless="${overwrite}" depends="prepare_solr_configs">

        <!--
        Copy files that are absent in target
        -->
        <copy todir="${dspace.dir}/solr" preservelastmodified="true">
            <fileset dir="solr-config-temp" includes="**/*">
                <and>
                    <present present="srconly" targetdir="${dspace.dir}/solr"/>
                    <!-- acts like <exclude name="**/data/**"/> -->
                    <filename negate="true" name="**/data/**"/>
                </and>
            </fileset>
        </copy>

        <!--
        Copy files that are different to target to *.new suffix
        -->
        <copy todir="${dspace.dir}/solr" preservelastmodified="true">
            <fileset dir="solr-config-temp">
                <and>
                    <different targetdir="${dspace.dir}/solr" ignoreFileTimes="true"/>
                    <!-- acts like <exclude name="**/data/**"/> -->
                    <filename negate="true" name="**/data/**"/>
                </and>
                <type type="file" />
            </fileset>
            <globmapper from="*" to="*.new" />
        </copy>

        <!--
            Remove the work directory
            -->
        <delete dir="solr-config-temp" />

        <echo>
====================================================================
 The DSpace configuration has been updated.

 During the upgrade process the build has preserved your original
 configuration and placed any conflicting new files next to your
 original suffixed with the "*.new" extension.

 To complete installation, you should do the following:

 * Check that you've properly merged any differences in the following files:

        </echo>

        <fileset dir="${dspace.dir}/solr" id="config.files">
              <include name="**/*.new"/>
        </fileset>

        <pathconvert pathsep="${line.separator}" property="configfiles" refid="config.files"/>

        <echo>${configfiles}</echo>

        <echo>

  * To properly merge your previous configuration files, it's
    best to try to take the newer version and copy your
    previous changes into it. Delete the old and remove the
    ".new" suffix from the new file.

====================================================================
        </echo>

    </target>

    <target name="prepare_solr_configs" description="Prepares solr configuration directory.">

        <mkdir dir="solr-config-temp" />

        <!--
        Prepare configuration files
        -->
        <copy todir="solr-config-temp" preservelastmodified="true" overwrite="true" failonerror="false">
            <fileset dir="solr">
                <!-- exclude all "data" directories from being overwritten -->
                <exclude name="**/data/**"/>
            </fileset>
        </copy>

    </target>




    <!-- ============================================================= -->
    <!-- Update core code only (no webapps or configs)                 -->
    <!-- ============================================================= -->

    <target name="update_code" description="Update installed code (without clobbering data/config)">

        <move todir="${dspace.dir}/bin.bak-${build.date}" failonerror="no">
            <fileset dir="${dspace.dir}/bin">
                <include name="**/*" />
            </fileset>
        </move>

        <copy todir="${dspace.dir}/bin" preservelastmodified="true">
            <fileset dir="bin" />
        </copy>

        <chmod dir="${dspace.dir}/bin" perm="u+x" includes="**/*" />

        <move todir="${dspace.dir}/lib.bak-${build.date}" failonerror="no">
            <fileset dir="${dspace.dir}/lib">
                <include name="**/*" />
            </fileset>
        </move>

        <copy todir="${dspace.dir}/lib" preservelastmodified="true">
            <fileset dir="lib" />
        </copy>

    	<copy todir="${dspace.dir}/solr" preservelastmodified="true">
    	     <fileset dir="solr"/>
    	</copy>

        <echo>
====================================================================
 ${dspace.dir}/bin was backed up to

 ${dspace.dir}/bin.bak-${build.date}

 ${dspace.dir}/lib was backed up to

 ${dspace.dir}/lib.bak-${build.date}

 Please review these directories and delete if no longer needed.
====================================================================
        </echo>

    </target>


    <!-- ============================================================= -->
    <!-- Update Web Applications only                                  -->
    <!-- ============================================================= -->

    <target name="update_webapps" description="Update Web Applications (without clobbering data/config)">

        <move todir="${dspace.dir}/webapps.bak-${build.date}" failonerror="no">
            <fileset dir="${dspace.dir}/webapps">
                <include name="**/*" />
            </fileset>
        </move>

        <echo>
====================================================================
 ${dspace.dir}/webapps was backed up to

 ${dspace.dir}/webapps.bak-${build.date}

 Please review this directory and delete it if it's no longer needed.
====================================================================
        </echo>

        <antcall target="copy_webapps" />

        <echo>
====================================================================
 Updated DSpace Web application directories are in the
 '${dspace.dir}/webapps' directory.

 * Stop your Web servlet container (Tomcat, Jetty, Resin etc.)

 * If your Web servlet container already loads the DSpace
   UI web applications from ${dspace.dir}/webapps/, then you
   can jump straight to restarting your Web servlet container

 * Otherwise, you will need to copy any web applications from
   ${dspace.dir}/webapps/ to the appropriate place for your servlet
   container.  (e.g. '$CATALINA_HOME/webapps' for Tomcat)

   If you're using Tomcat, you should first delete any existing
   DSpace directories in '$CATALINA_HOME/webapps/' (e.g. you would
   delete an existing $CATALINA_HOME/webapps/dspace/ directory).
   Otherwise, Tomcat may continue to use old code in that directory.

 * Start up your Web servlet container again.
====================================================================
        </echo>

    </target>


    <!-- ============================================================= -->
	<!-- Copy Web Applications to Runtime Location -->
    <!-- ============================================================= -->

    <target name="copy_webapps">

        <!-- Copy webapp files to /webapps (excluding any filtered files) -->
        <copy todir="${dspace.dir}/webapps" preservelastmodified="true" failonerror="no">
            <fileset dir="webapps">
                <exclude name="**/web.xml" />
                <exclude name="**/robots.txt" />
            	<exclude name="**/application.properties" />
            </fileset>
        </copy>

        <!-- Ensure specific webapp files (web.xml, robots.txt) are filtered -->
        <copy todir="${dspace.dir}/webapps" preservelastmodified="false" failonerror="no">
            <fileset dir="webapps">
                <include name="**/web.xml" />
                <include name="**/robots.txt" />
            	<include name="**/application.properties" />
            </fileset>
            <filterchain>
                <expandproperties />
            </filterchain>
        </copy>

        <antcall target="build_webapps_wars"/>

    </target>


    <!-- ============================================================= -->
    <!-- Compress Web Applications                                     -->
    <!-- (Only executes if the "wars" property is defined)             -->
    <!-- ============================================================= -->

    <target name="build_webapps_wars" description="Compress Web Applications into .war files" if="wars">

        <war destfile="${dspace.dir}/webapps/oai.war">
            <fileset dir="${dspace.dir}/webapps/oai/" />
        </war>

        <war destfile="${dspace.dir}/webapps/rdf.war">
            <fileset dir="${dspace.dir}/webapps/rdf/"/>
        </war>

        <war destfile="${dspace.dir}/webapps/rest.war">
            <fileset dir="${dspace.dir}/webapps/rest/"/>
        </war>

        <war destfile="${dspace.dir}/webapps/sword.war">
            <fileset dir="${dspace.dir}/webapps/sword/" />
        </war>

    	<war destfile="${dspace.dir}/webapps/solr.war">
    	            <fileset dir="${dspace.dir}/webapps/solr/" />
    	</war>
    </target>


    <!-- ============================================================= -->
    <!-- Install DSpace and Dependencies                               -->
    <!-- ============================================================= -->

    <target name="init_installation">

        <mkdir dir="${dspace.dir}/bin" />

        <mkdir dir="${dspace.dir}/config" />

        <mkdir dir="${dspace.dir}/lib" />

        <mkdir dir="${dspace.dir}/webapps" />

        <mkdir dir="${dspace.dir}/triplestore" />

        <mkdir dir="${org.dspace.app.itemexport.work.dir}" />

        <mkdir dir="${org.dspace.app.itemexport.download.dir}" />

        <mkdir dir="${handle.dir}" />

        <mkdir dir="${dspace.dir}/log" />

        <mkdir dir="${upload.temp.dir}" />

        <mkdir dir="${report.dir}" />

    	<mkdir dir="${dspace.dir}/solr" />

    	<!-- Runtime files (Could be erased - just for performing purposes) -->
    	<mkdir dir="${dspace.dir}/var" />
    	<!-- Runtime files for OAI 2.0 -->
    	<mkdir dir="${dspace.dir}/var/oai" />
    </target>


    <!-- ============================================================= -->
    <!-- Fresh install of config files                                 -->
    <!-- ============================================================= -->

    <!-- Copies the configuration files to ${dspace.dir}/config. -->
    <target name="init_configs" depends="init_installation,prepare_configs">

        <copy todir="${dspace.dir}/config" preservelastmodified="true" failonerror="false">
            <fileset dir="config-temp" excludes="dspace.cfg" />
        </copy>

        <!-- Remove the prepare_configs work directory -->
        <delete dir="config-temp" />

        <copy file="${config}" tofile="${dspace.dir}/config/dspace.cfg" preservelastmodified="true" />

        <echo file='${dspace.dir}/config/ant.properties' message='ant.version = ${ant.version}'/>

    </target>

    <!-- ============================================================= -->
    <!-- Check the connection to the database                          -->
    <!-- ============================================================= -->

    <!-- Test the connection to the database -->
    <target name="test_database">
        <java classname="org.dspace.app.launcher.ScriptLauncher"
              classpathref="class.path"
              fork="yes"
              failonerror="yes">
            <sysproperty key="log4j.configurationFile"
		         value="file:config/log4j2-console.xml" />
            <sysproperty key="dspace.log.init.disable" value="true" />
            <sysproperty key="dspace.dir" value="${dspace.dir}" />
            <arg value="database" />
            <arg value="test" />
        </java>
    </target>

    <!-- ============================================================= -->
    <!-- Install fresh code but do not touch the database              -->
    <!-- ============================================================= -->

    <target name="install_code"
            depends="init_installation,init_configs"
            description="Do a fresh install of the code, preserving any data."
            >

        <delete failonerror="no">
            <fileset dir="${dspace.dir}/bin" includes="**/*" />
        </delete>

        <copy todir="${dspace.dir}/bin" preservelastmodified="true">
            <fileset dir="bin" />
        </copy>

        <chmod dir="${dspace.dir}/bin" perm="u+x" includes="**/*" />

        <delete failonerror="no">
            <fileset dir="${dspace.dir}/lib" includes="**/*" />
        </delete>

        <copy todir="${dspace.dir}/lib" preservelastmodified="true">
            <fileset dir="lib" />
        </copy>

    	<copy todir="${dspace.dir}/solr" preservelastmodified="true">
    	    <fileset dir="solr" />
    	</copy>

        <echo>
====================================================================
 The DSpace code has been installed.
====================================================================
        </echo>

    </target>


    <!-- ============================================================= -->
    <!-- Do a fresh system install                                     -->
    <!-- ============================================================= -->

    <target name="fresh_install"
            depends="init_installation,init_configs,test_database,install_code"
            description="Do a fresh install of the system, overwriting any data">

        <delete failonerror="no">
            <fileset dir="${dspace.dir}/webapps" includes="**/*" />
        </delete>

        <antcall target="copy_webapps" />

        <antcall target="init_spiders" />

        <echo>
====================================================================
 The DSpace code has been installed.

 To complete installation, you should do the following:

 * Setup your Web servlet container (e.g. Tomcat) to look for your
   DSpace web applications in: ${dspace.dir}/webapps/

   OR, copy any web applications from ${dspace.dir}/webapps/ to
   the appropriate place for your servlet container.
   (e.g. '$CATALINA_HOME/webapps' for Tomcat)

 * Start up your servlet container (e.g. Tomcat). DSpace now will
   initialize the database on the first startup.

 * Make an initial administrator account (an e-person) in DSpace:

   ${dspace.dir}/bin/dspace create-administrator

 You should then be able to access your DSpace's REST API:

   ${dspace.server.url}

====================================================================
        </echo>

    </target>

    <!-- installs and/or updates Project Counter Robot List resolution database -->
    <target name="update_spiders">
        <echo>Downloading: ${irus.statistics.spider.agentregex.url}</echo>
        <get src="${irus.statistics.spider.agentregex.url}" dest="${irus.statistics.spider.agentregex.regexfile}" verbose="true" />
    </target>

    <target name="check_spiders">
        <condition property="need.spiders">
            <and>
                <not>
                    <available file="${irus.statistics.spider.agentregex.regexfile}" />
                </not>
                <not>
                    <contains string="${irus.statistics.spider.agentregex.url}" substring="irus.statistics.spider.agentregex.url"/>
                </not>
            </and>
        </condition>
    </target>

    <target name="init_spiders" depends="check_spiders" if="need.spiders">
        <antcall target="update_spiders" />
    </target>

</project>
