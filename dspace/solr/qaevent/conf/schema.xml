<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!--
    This is the DSpace "qaevent" core, which stores the events coming from the Quality Assurance Broker.
-->
<schema name="qaevent" version="1.5">

  <types>
    
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <fieldType name="int" class="solr.IntPointField" omitNorms="true" positionIncrementGap="0" docValues="true"/>
    <fieldType name="float" class="solr.FloatPointField" omitNorms="true" positionIncrementGap="0" docValues="true"/>
    <fieldType name="long" class="solr.LongPointField" omitNorms="true" positionIncrementGap="0" docValues="true"/>
    <fieldType name="double" class="solr.DoublePointField" omitNorms="true" positionIncrementGap="0" docValues="true"/>
    <fieldType name="date" class="solr.DatePointField" omitNorms="true" positionIncrementGap="0" docValues="true"/>

    <fieldType name="pint" class="solr.IntPointField" omitNorms="true" docValues="true"/>
    <fieldType name="plong" class="solr.LongPointField" omitNorms="true" docValues="true"/>
    <fieldType name="pfloat" class="solr.FloatPointField" omitNorms="true" docValues="true"/>
    <fieldType name="pdouble" class="solr.DoublePointField" omitNorms="true" docValues="true"/>
    <fieldType name="pdate" class="solr.DatePointField" sortMissingLast="true" omitNorms="true" docValues="true"/>

    <fieldType name="sint" class="solr.IntPointField" sortMissingLast="true" omitNorms="true" docValues="true"/>
    <fieldType name="slong" class="solr.LongPointField" sortMissingLast="true" omitNorms="true" docValues="true"/>
    <fieldType name="sfloat" class="solr.FloatPointField" sortMissingLast="true" omitNorms="true" docValues="true"/>
    <fieldType name="sdouble" class="solr.DoublePointField" sortMissingLast="true" omitNorms="true" docValues="true"/>

    <fieldType name="random" class="solr.RandomSortField" indexed="true" />

    <!-- A text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>

    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
        Synonyms and stopwords are customized by external files, and stemming is enabled.
        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
        WordDelim parts) are removed.
        -->
   	<fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"
                splitOnCaseChange="1"/>
        <filter class="org.apache.lucene.analysis.icu.ICUFoldingFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                splitOnCaseChange="1"/>
        <filter class="org.apache.lucene.analysis.icu.ICUFoldingFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- Less flexible matching, but less false matches.  Probably not ideal for product names,
         but may be good for SKUs.  Can insert dashes in the wrong place and still match. -->
    <fieldType name="textTight" class="solr.TextField" positionIncrementGap="100" >
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="0"
                generateNumberParts="0"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- A general unstemmed text field - good if one does not know the language of the field -->
    <fieldType name="textgen" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt" />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"
                splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                splitOnCaseChange="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />

    <fieldType name="lowerCaseSort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.TrimFilterFactory" />
      </analyzer>
    </fieldType>

    <fieldType name="keywordFilter" class="solr.TextField" sortMissingLast="true" omitNorms="true">
        <analyzer>
            <!--Treats the entire field as a single token, regardless of its content-->
            <tokenizer class="solr.KeywordTokenizerFactory"/>

            <!--<filter class="solr.LowerCaseFilterFactory" />-->
            <filter class="solr.TrimFilterFactory" />
        </analyzer>
    </fieldType>

    <!--
     SpellCheck analysis config based off of http://wiki.apache.org/solr/
     SpellCheckingAnalysis
     -->
    <fieldType name="textSpell" class="solr.TextField"
               positionIncrementGap="100" stored="false" multiValued="true">
        <analyzer type="index">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.SynonymFilterFactory"
                    synonyms="synonyms.txt" ignoreCase="true"
                    expand="true"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true"
                    words="stopwords.txt"/>
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        </analyzer>
        <analyzer type="query">
            <tokenizer class="solr.StandardTokenizerFactory"/>
            <filter class="solr.LowerCaseFilterFactory"/>
            <filter class="solr.StopFilterFactory" ignoreCase="true"
                    words="stopwords.txt"/>
            <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
        </analyzer>
    </fieldType>
 </types>


 <fields>
 
 	<field name="_version_" type="long" indexed="true" stored="true" multiValued="false"/>

    <!-- The event source -->
    <field name="source" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The event id -->
    <field name="event_id" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The event original id -->
    <field name="original_id" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The subject title -->
    <field name="title" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The event topic -->
	<field name="topic" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The event trust -->
	<field name="trust" type="double" indexed="true" stored="true" omitNorms="true" />
    <!-- The event message -->
	<field name="message" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The uuid of the item related to the event -->
	<field name="resource_uuid" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The uuid of the second item related to the event-->
	<field name="related_uuid" type="string" indexed="true" stored="true" omitNorms="true" />
    <!-- The last update date -->
	<field name="last_update" type="date" indexed="true" stored="true" omitNorms="true" />
   	    
   	<dynamicField name="*_i"  type="int"    indexed="true"  stored="true" multiValued="true" docValues="true"/>
   	<dynamicField name="*_s"  type="string"  indexed="true"  stored="true" multiValued="true" docValues="true"/>
   	<dynamicField name="*_l"  type="long"   indexed="true"  stored="true" multiValued="true" docValues="true"/>
   	<dynamicField name="*_t"  type="text"    indexed="true"  stored="true" multiValued="true" />
   	<dynamicField name="*_b"  type="boolean" indexed="true"  stored="true" multiValued="true" />
   	<dynamicField name="*_f"  type="float"  indexed="true"  stored="true" multiValued="true" docValues="true"/>
   	<dynamicField name="*_d"  type="double" indexed="true"  stored="true" multiValued="true" docValues="true"/>
   	<dynamicField name="*_dt" type="date" indexed="true"  stored="true" multiValued="true"/>
   	<dynamicField name="*_signature" type="string" indexed="true" stored="true" omitNorms="true" multiValued="true" docValues="true"/>
       	
 </fields>

 <uniqueKey>event_id</uniqueKey>
 
</schema>
