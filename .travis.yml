# DSpace's Travis CI Configuration
# Builds: https://travis-ci.com/github/DSpace/DSpace
# Travis configuration guide/validation: https://config.travis-ci.com/explore
language: java
# TODO: Upgrade to Bionic
dist: trusty
os: linux

jdk:
  # DS-3384 Oracle JDK has DocLint enabled by default.
  # Let's use this to catch any newly introduced DocLint issues.
  - oraclejdk11

# Define global environment variables (shared across all jobs)
env:
  global:
    # Suppress all Maven "downloading" messages in Travis logs (see https://stackoverflow.com/a/35653426)
    # This also slightly speeds builds in Travis, as there is less logging
    - HIDE_MAVEN_DOWNLOADS="-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
    # Give Maven 1GB of memory to work with
    - MAVEN_OPTS="-Xmx1024M $HIDE_MAVEN_DOWNLOADS"
    # Maven options which will skip ALL code validation checks. Includes skipping:
    #  - enforcer.skip     => Skip maven-enforcer-plugin rules
    #  - checkstyle.skip   => Skip all checkstyle checks by maven-checkstyle-plugin
    #  - license.skip      => Skip all license header checks by license-maven-plugin
    #  - xml.skip          => Skip all XML/XSLT validation by xml-maven-plugin
    # (Useful for builds which don't need to repeat code checks)
    - SKIP_CODE_CHECKS="-Denforcer.skip=true -Dcheckstyle.skip=true -Dlicense.skip=true -Dxml.skip=true"

# Create two jobs to run Unit & Integration tests in parallel.
# These jobs only differ in the TEST_FLAGS defined below,
# and otherwise share all the other configs in this file
jobs:
  include:
    - name: "Run Unit Tests & Check Code"
      # NOTE: unit tests include deprecated REST API v6 (as it has unit tests)
      env: TEST_FLAGS="-DskipUnitTests=false -Pdspace-rest"
    - name: "Run Integration Tests"
      # NOTE: skips code checks, as they are already done by Unit Test job
      env: TEST_FLAGS="-DskipIntegrationTests=false $SKIP_CODE_CHECKS"

# Skip 'install' process to save time. We build/install/test all at once in "script" below.
install: skip

# Build DSpace and run configured tests (see 'jobs' above)
# Notes on flags used:
#  -B                => Maven batch/non-interactive mode (recommended for CI)
#  -V                => Display Maven version info before build
#  -P-assembly       => Disable build of dspace-installer in [src]/dspace/, as it can be memory intensive
#  -Pcoverage-report => Enable aggregate code coverage report (across all modules) via JaCoCo
script: mvn install -B -V -P-assembly -Pcoverage-report $TEST_FLAGS

# After a successful build and test (see 'script'), send aggregate code coverage reports
# (generated by -Pcoverage-report above) to CodeCov.io
after_success: bash <(curl -s https://codecov.io/bash)
