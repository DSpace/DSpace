language: java
sudo: false
dist: trusty

env:
  # Give Maven 1GB of memory to work with
  - MAVEN_OPTS=-Xmx1024M

jdk:
  # DS-3384 Oracle JDK has DocLint enabled by default.
  # Let's use this to catch any newly introduced DocLint issues.
  - oraclejdk11

## Should we run into any problems with oraclejdk8 on Travis, we may try the following workaround.
## https://docs.travis-ci.com/user/languages/java#Testing-Against-Multiple-JDKs
## https://github.com/travis-ci/travis-ci/issues/3259#issuecomment-130860338
#addons:
#  apt:
#    packages:
#      - oracle-java8-installer

before_install:
  # Remove outdated settings.xml from Travis builds. Workaround for https://github.com/travis-ci/travis-ci/issues/4629
  - rm ~/.m2/settings.xml

# Skip install stage, as we'll do it below
install: "echo 'Skipping install stage, dependencies will be downloaded during build and test stages.'"

# Build DSpace and run both Unit and Integration Tests
script:
  # Summary of flags used (below):
  #     license:check           => Validate all source code license headers
  #     -DskipTests=false       => Enable DSpace Unit Tests
  #     -DskipITs=false         => Enable DSpace Integration Tests
  #     -Pdspace-rest           => Enable optional dspace-rest module as part of build
  #     -P !assembly            => Skip assembly of "dspace-installer" directory (as it can be memory intensive)
  #     -B                      => Maven batch/non-interactive mode (recommended for CI)
  #     -V                      => Display Maven version info before build
  #     -Dsurefire.rerunFailingTestsCount=2 => try again for flakey tests, and keep track of/report on number of retries
  - "mvn clean install license:check -DskipTests=false -DskipITs=false -Pdspace-rest -P !assembly -B -V -Dsurefire.rerunFailingTestsCount=2"

# After a successful build and test (see 'script'), send code coverage reports to coveralls.io
# These code coverage reports are generated by jacoco-maven-plugin (during test process above).
after_success:
  # Run "verify", enabling the "coveralls" profile. This sends our reports to coveralls.io (see coveralls-maven-plugin)
  - "cd dspace && mvn verify -P coveralls"
