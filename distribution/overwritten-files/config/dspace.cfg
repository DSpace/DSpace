## keyword from the same set as for the default "authority.minconfidence"
#authority.minconfidence.dc.contributor.author = accepted

## demo: subject code autocomplete, using srsc as authority
## (DSpaceControlledVocabulary plugin must be enabled)
#choices.plugin.dc.subject = srsc
#choices.presentation.dc.subject = select
#vocabulary.plugin.srsc.hierarchy.store = true
#vocabulary.plugin.srsc.hierarchy.suggest = true
#vocabulary.plugin.srsc.delimiter = "::"

## Demo: publisher name lookup through SHERPA/RoMEO:
#choices.plugin.dc.publisher = common_types
#choices.presentation.dc.publisher = suggest
#choices.closed.dc.publisher = true
#// La propiedad closed limita que el usuario no escriba
#authority.controlled.dc.publisher = true

## Demo: publisher name lookup through SHERPA/RoMEO:
choices.plugin.dc.publisher = SRPublisher
choices.presentation.dc.publisher = suggest
choices.closed.dc.publisher = true
authority.controlled.dc.publisher = true



## demo: journal title lookup, with ISSN as authority
#choices.plugin.dc.title.alternative = SRJournalTitle
#choices.presentation.dc.title.alternative = suggest
#authority.controlled.dc.title.alternative = true

## demo: use choice authority (without authority-control) to restrict dc.type on EditItemMetadata page
#choices.plugin.dc.type = common_types
#choices.presentation.dc.type = select

## demo: same idea for dc.language.iso
#choices.plugin.dc.language.iso = common_iso_languages
#choices.presentation.dc.language.iso = select

# Change number of choices shown in the select in Choices lookup popup
#xmlui.lookup.select.size = 12


#### Ordering of bitstreams ####

## Specify the ordering that bitstreams are listed.
##
## Bitstream field to sort on.  Values: sequence_id or name. Default: sequence_id
webui.bitstream.order.field = bitstream_order

## Direction of sorting order. Values: DESC or ASC. Default: ASC
#webui.bitstream.order.direction = ASC


##### Google Scholar Metadata Configuration #####
google-metadata.config = ${dspace.dir}/config/crosswalks/google-metadata.properties
google-metadata.enable = true

#---------------------------------------------------------------#
#--------------JSPUI SPECIFIC CONFIGURATIONS--------------------#
#---------------------------------------------------------------#
# These configs are only used by the JSP User Interface         #
#---------------------------------------------------------------#

##### Upload File settings #####

# Where to temporarily store uploaded files
upload.temp.dir = ${dspace.dir}/upload

# Maximum size of uploaded files in bytes, negative setting will result in no limit being set
# 512Mb
upload.max = 536870912


###### Statistical Report Configuration Settings ######

# should the stats be publicly available?  should be set to false if you only
# want administrators to access the stats, or you do not intend to generate
# any
report.public = false

# directory where live reports are stored
report.dir = ${dspace.dir}/reports/



###### Web Interface Settings ######


# Customise the DC metadata fields to show in the default simple item view.
#
# The form is <schema prefix>.<element>[.<qualifier>|.*][(date)|(link)], ...
#
# For example:
#    dc.title               = Dublin Core element 'title' (unqualified)
#    dc.title.alternative   = DC element 'title', qualifier 'alternative'
#    dc.title.*             = All fields with Dublin Core element 'title'
#                             (any or no qualifier)
#    dc.identifier.uri(link) = DC identifier.uri, render as a link
#    dc.date.issued(date)   = DC date.issued, render as a date
#
# If an item has no value for a particular field, it won't be displayed.
# The name of the field for display will be drawn from the current UI
# dictionary, using the key:
#
# "metadata.<style>.<field>" or if undefined the key "metadata.<field>"
#
# e.g.   "metadata.default.dc.title" or "metadata.default.dc.title"
#        "metadata.dc.contributor.*" or "metadata.default.dc.contributor.*"
#        "metadata.dc.date.issued" or "metadata.default.dc.date.issued"
#
#webui.itemdisplay.default = dc.title, dc.title.alternative, dc.contributor.*, \
#                            dc.subject, dc.date.issued(date), dc.publisher, \
#                            dc.identifier.citation, dc.relation.ispartofseries, \
#                            dc.description.abstract, dc.description, \
#                            dc.identifier.govdoc, dc.identifier.uri(link), \
#                            dc.identifier.isbn, dc.identifier.issn, \
#                            dc.identifier.ismn, dc.identifier
#
# When using "resolver" in webui.itemdisplay to render identifiers as resolvable
# links, the base URL is taken from <code>webui.resolver.<n>.baseurl</code>
# where <code>webui.resolver.<n>.urn</code> matches the urn specified in the metadata value.
# The value is appended to the "baseurl" as is, so the baseurl need to end with slash almost in any case.
# If no urn is specified in the value it will be displayed as simple text.
#
#webui.resolver.1.urn = doi
#webui.resolver.1.baseurl = http://dx.doi.org/
#webui.resolver.2.urn = hdl
#webui.resolver.2.baseurl = http://hdl.handle.net/
#
# For the doi and hdl urn defaults values are provided, respectively http://dx.doi.org and
# http://hdl.handle.net are used.<br>
#
# If a metadata value with style: "doi", "handle" or "resolver" matches a URL
# already, it is simply rendered as a link with no other manipulation.

# Specify which strategy use for select the style for an item
plugin.single.org.dspace.app.webui.util.StyleSelection = \
                       org.dspace.app.webui.util.CollectionStyleSelection
                       #org.dspace.app.webui.util.MetadataStyleSelection

# If use CollectionStyleSelection
# Specify which collections use which views by Handle.
#
# webui.itemdisplay.<style>.collections = <collection handle>, ...
#
# FIXME: This should be more database-driven
#
# webui.itemdisplay.thesis.collections = 123456789/24, 123456789/35

# If use MetadataStyleSelection, you MUST
# Specify which metadata use as name of the style
#
# webui.itemdisplay.metadata-style = schema.element[.qualifier|.*]
# webui.itemdisplay.metadata-style = dc.type

# Customise the DC fields to use in the item listing page.  Elements will be
# displayed left to right in the order that they are specified here.
#
# The form is <schema prefix>.<element>[.<qualifier>|.*][(date)], ...
#
# Although not a requirement, it would make sense to include among the listed
# fields at least the date and title fields as specified by the
# webui.browse.index.* configuration options below.
#
# If you have enabled thumbnails (webui.browse.thumbnail.show), you must also
# include a 'thumbnail' entry in your columns - this is where the thumbnail will be displayed
#
# webui.itemlist.columns = thumbnail, dc.date.issued(date), dc.title, dc.contributor.*
#
# You can customise the width of each column with the following line - you can have numbers (pixels)
# or percentages. For the 'thumbnail' column, a setting of '*' will use the max width specified
# for browse thumbnails (webui.browse.thumbnail.maxwidth, thumbnail.maxwidth)
# webui.itemlist.widths = *, 130, 60%, 40%

# Additionally, you can override the DC fields used on the listing page for
# a given browse index and/or sort option. As a sort option or index may be defined
# on a field that isn't normally included in the list, this allows you to display
# the fields that have been indexed / sorted on.
#
# There are a number of forms the configuration can take, and the order in which
# they are listed below is the priority in which they will be used (so a combination
# of an index name and sort name will take precedence over just the browse name).
#
# webui.itemlist.browse.<index name>.sort.<sort name>.columns
# webui.itemlist.sort.<sort name>.columns
# webui.itemlist.browse.<browse name>.columns
# webui.itemlist.<sort or index name>.columns
#
# In the last case, a sort option name will always take precedence over a browse
# index name. Note also, that for any additional columns you list, you will need to
# ensure there is an itemlist.<field name> entry in the messages file.
#
# The following example would display the date of accession in place of the issue date
# whenever the dateaccessioned browse index or sort option is selected.
#
# Just like webui.itemlist.columns, you will need to include a 'thumbnail' entry to display
# and thumbnails in the item list
#
# webui.itemlist.dateaccessioned.columns = thumbnail, dc.date.accessioned(date), dc.title, dc.contributor.*
#
# As above, you can customise the width of the columns for each configured column list, substituting '.widths' for
# '.columns' in the property name. See the setting for webui.itemlist.widths for more details
# webui.itemlist.dateaccessioned.widths = *, 130, 60%, 40%

# You can also set the overall size of the item list table with the following setting. It can lead to faster
# table rendering when used with the column widths above, but not generally recommended.
# webui.itemlist.tablewidth = 100%


### i18n -  Locales / Language ####
# Default Locale
# A Locale in the form country or country_language or country_language_variant
# if no default locale is defined the server default locale will be used.
default.locale = en

# All the Locales, that are supported by this instance of DSpace
# A comma seperated list of Locales. All types of Locales country, country_language, country_language_variant
# Note that the appropriate file are present, especially that all the Messages_x.properties are there
# may be used, e. g: webui.supported.locales = en, de


#### Additional configuration for Item Mapper ####

# the index name (from webui.browse.index above) to use for
# displaying items by author
#
itemmap.author.index = author


### MyDSpace display of group membership ####
#
# if omitted, the default behaviour is false
#
# webui.mydspace.showgroupmemberships = false


##### SFX Server #####

# SFX query is appended to this URL.  If this property is commented out or
# omitted, SFX support is switched off.
# sfx.server.url = http://sfx.myu.edu:8888/sfx?


#### Item Recommendation Settings #####

# show a link to the item recommendation page from item display page
webui.suggest.enable = false
#
# Enable only, if the user is logged in.
# If not set the  default value is  false
# webui.suggest.loggedinusers.only = true


#### Controlled Vocabulary Settings #####

# Enable or disable the controlled vocabulary add-on
# Warning: this feature is not compatible with WAI (it requires javascript to function)
#
# webui.controlledvocabulary.enable = true


#### Session invalidation #####

# Enable or disable session invalidation upon login or logout.
# This feature is enabled by default to help prevent session hijacking
# but may cause problems for shibboleth, etc
#
# webui.session.invalidate = true

#---------------------------------------------------------------#
#--------------XMLUI SPECIFIC CONFIGURATIONS--------------------#
#---------------------------------------------------------------#
# These configs are only used by the XML User Interface         #
#---------------------------------------------------------------#


# A list of supported locales for Manakin. Manakin will look at a user's browser
# configuration for the first language that appears in this list to make available
# to in the interface. This parameter is a comma seperated list of Locales. All
# types of Locales country, country_language, country_language_variant
# Note that that if the approprate files are not present (i.e. Messages_XX_XX.xml)
# then Manakin will fall back through to a more general language.
#xmlui.supported.locales = en, de

# Force all authenticated connections to use SSL, only non-authenticated
# connections are allowed over plain http. If set to true, then you need to
# ensure that the 'dspace.hostname' parameter is set to the correctly.
#xmlui.force.ssl = true

# Determine if new users should be allowed to register or edit their own metadata.
# These parameters are usefull in congunction with shibboleth where you want to
# disallow registration and disable the user's ability to edit their metadata
# because both come from Shibboleth.
#xmlui.user.registration=true
#xmlui.user.editmetadata=true


# Determine if super administrators (those whom are in the Administrators group)
# can login as another user from the "edit eperson" page. This is usefull for
# debugging problems in a running dspace instance, especially in the workflow
# process. The default value is false, i.e. no one may assume the login of another user.
#xmlui.user.assumelogin = true

# After a user has logged into the system, which url should they be directed too?
# Leave this parameter blank or undefined to direct users to the homepage, or
# "/profile" for the user's profile, or another reasonable choice is "/submissions"
# to see if the user has any tasks awaiting their attention. The default is the
# repository home page.
#xmlui.user.loginredirect=/profile

# Allow the user to override which theme is used to display a particular page.
# When submitting a request add the HTTP parameter "themepath" which corresponds
# to a particular theme, that specified theme will be used instead of the any
# other configured theme. Note that this is a potential security hole allowing
# execution of unintended code on the server, this option is only for development
# and debugging it should be turned off for any production repository. The default
# value unless otherwise specified is "false"
#xmlui.theme.allowoverrides = false

# Enabling this property will concatenate CSS, JS and JSON files where possible.
# CSS files can be concatenated if multiple CSS files with the same media attribute
# are used in the same page. Links to the CSS files are automatically referring to the
# concatenated resulting CSS file.
# The theme sitemap should be updated to use the ConcatenationReader for all js, css and json
# files before enabling this property.
#xmlui.theme.enableConcatenation = false

# Enabling this property will minify CSS, JS and JSON files where possible.
# The theme sitemap should be updated to use the ConcatenationReader for all js, css and json
# files before enabling this property.
#xmlui.theme.enableMinification = false

### Setings for Item lists in Mirage theme ###
# What should the emphasis be in the display of item lists?
# Possible values : 'file', 'metadata'. If your repository is
# used mainly for scientific papers 'metadata' is probably the
# best way. If you have a lot of images and other files 'file'
# will be the best starting point
# (metdata is the default value if this option is not specified)
#xmlui.theme.mirage.item-list.emphasis = file

# Determine which bundles administrators and collection administrators may upload
# into an existing item through the administrative interface. If the user does not
# have the appropriate privileges (add & write) on the bundle then that bundle will
# not be shown to the user as an option.
#xmlui.bundle.upload = ORIGINAL, METADATA, THUMBNAIL, LICENSE, CC-LICENSE

# On the community-list page should all the metadata about a community/collection
# be available to the theme. This parameter defaults to true, but if you are
# experiencing performance problems on the community-list page you should experiment
# with turning this option off.
#xmlui.community-list.render.full = false

# Normally, Manakin will fully verify any cache pages before using a cache copy.
# This means that when the community-list page is viewed the database is queried
# for each community/collection to see if their metadata has been modified. This
# can be expensive for repositories with a large community tree. To help solve
# this problem you can set the cache to be assumed valued for a specific set of time.
# The downside of this is that new or editing communities/collections may not show up
# the website for a period of time.
#xmlui.community-list.cache = 12 hours

# Optionally you may configure Manakin to take advantage of metadata stored as a
# bitstream. These metadata files should be inside the "METADATA" bundle and named
# either MODS.xml or METS.xml. If either of the following options are turned on then
# these files will be made available to the theme when rendering an item.
#xmlui.bitstream.mods = true
#xmlui.bitstream.mets = true

# If you would like to use google analytics to track general website statistics then
# use the following parameter to provide your analytics key. First sign up for an
# account at http://analytics.google.com, then create an entry for your repositories
# website. Analytics will give you a snipit of javascript code to place on your site,
# inside that snip it is your google analytics key usually found in the line:
# _uacct = "UA-XXXXXXX-X"
# Take this key (just the UA-XXXXXX-X part) and place it here in this parameter.
#xmlui.google.analytics.key=UA-XXXXXX-X

# Assign how many page views will be recorded and displayed in the control panel's
# activity viewer. The activity tab allows an administrator to debug problems in a
# running DSpace by understanding who and how their dspace is currently being used.
# The default value is 250.
#xmlui.controlpanel.activity.max = 250

# Determine where the control panel's activity viwer recieves an events IP address
# from. If your DSpace is in a load balanced enviornment or otherwise behind a
# context-switch then you will need to set the paramater to the HTTP parameter that
# records the original IP address.
#xmlui.controlpanel.activity.ipheader = X-Forward-For
