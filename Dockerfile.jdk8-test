# This image will be published as dspace/dspace
# See https://dspace-labs.github.io/DSpace-Docker-Images/ for usage details
# 
# This version is JDK8 compatible
# - tomcat:8-jre8
# - ANT 1.10.7
# - maven:3-jdk-8
# - note: expose /solr to any host; provide /rest over http
# - default tag for branch: dspace/dspace: dspace/dspace:dspace-6_x-jdk8

# Step 0 - Get Maven dependencies
FROM maven:3-jdk-8 as mvndeps

RUN mkdir -p /code/dspace/modules/{additions,rest,xmlui-mirage2,xmlui,solr,jspui,oai,swordv2,sword,rdf} \
    && mkdir -p /code/{dspace-jspui,dspace-swordv2,dspace-xmlui-mirage2,dspace-oai,dspace-rest,dspace-xmlui,dspace-api,dspace-solr,dspace-sword,dspace-services}

COPY ./pom.xml /code
COPY ./dspace/pom.xml /code/dspace/
COPY ./dspace/modules/pom.xml /code/dspace/modules/
COPY ./dspace/modules/additions/pom.xml /code/dspace/modules/additions/
COPY ./dspace/modules/rest/pom.xml /code/dspace/modules/rest/
COPY ./dspace/modules/xmlui-mirage2/pom.xml /code/dspace/modules/xmlui-mirage2/
COPY ./dspace/modules/xmlui/pom.xml /code/dspace/modules/xmlui/
COPY ./dspace/modules/solr/pom.xml /code/dspace/modules/solr/
COPY ./dspace/modules/jspui/pom.xml /code/dspace/modules/jspui/
COPY ./dspace/modules/oai/pom.xml /code/dspace/modules/oai/
COPY ./dspace/modules/swordv2/pom.xml /code/dspace/modules/swordv2/
COPY ./dspace/modules/sword/pom.xml /code/dspace/modules/sword/
COPY ./dspace/modules/rdf/pom.xml /code/dspace/modules/rdf/
COPY ./dspace-jspui/pom.xml /code/dspace-jspui/
COPY ./dspace-rdf/pom.xml /code/dspace-rdf/
COPY ./dspace-swordv2/pom.xml /code/dspace-swordv2/
COPY ./dspace-xmlui-mirage2/pom.xml /code/dspace-xmlui-mirage2/
COPY ./dspace-oai/pom.xml /code/dspace-oai/
COPY ./dspace-rest/pom.xml /code/dspace-rest/
COPY ./dspace-xmlui/pom.xml /code/dspace-xmlui/
COPY ./dspace-api/pom.xml /code/dspace-api/
COPY ./dspace-solr/pom.xml /code/dspace-solr/
COPY ./dspace-sword/pom.xml /code/dspace-sword/
COPY ./dspace-services/pom.xml /code/dspace-services/

WORKDIR /code
RUN mvn -Dmirage2.on=true de.qaware.maven:go-offline-maven-plugin:1.2.6:resolve-dependencies

# Step 1 - Run Maven Build
FROM dspace/dspace-dependencies:dspace-6_x as build
ARG TARGET_DIR=dspace-installer

# Install node, npm, bower, grunt, and compass (for reuse in layers)
WORKDIR /opt
RUN (wget -O- https://nodejs.org/dist/v8.10.0/node-v8.10.0-linux-x64.tar.gz | tar xzf -) \
    && mv node-v8.10.0-linux-x64/ node \
    && cd /usr/local/bin \
    && ln -s /opt/node/bin/node \
    && ln -s /opt/node/bin/npm \
    && npm install npm@6.5.0 -g \
    && npm install bower@1.7.9 -g \
    && ln -s /opt/node/bin/bower \
    && npm install grunt -g \
    && ln -s /opt/node/bin/grunt \
    && apt-get update \
    && apt-get install -yq --no-install-recommends ruby ruby-dev build-essential \
    && gem install compass \
    && apt-get purge -yq build-essential ruby-dev \
    && rm -rf /var/lib/apt/lists/*

# The dspace-install directory will be written to /install
RUN mkdir /install \
    && chown -Rv dspace: /install

WORKDIR /app
USER dspace

ENV GEM_PATH "/var/lib/gems/2.3.0:/root/.gem/ruby/2.3.0:/usr/lib/x86_64-linux-gnu/rubygems-integration/2.3.0:/usr/share/rubygems-integration/2.3.0:/usr/share/rubygems-integration/all:/home/dspace/.gem/ruby/2.3.0"
ENV GEM_HOME "/home/dspace/.gem/ruby/2.3.0"

COPY --from=mvndeps --chown=dspace /root/.m2 /home/dspace/.m2

# Copy the DSpace source code into the workdir (excluding .dockerignore contents)
ADD --chown=dspace . /app/
COPY dspace/src/main/docker/local.cfg /app/local.cfg

# Build DSpace.  Copy the dspace-install directory to /install.  Clean up the build to keep the docker image small
RUN mvn package -Dmirage2.on=true -Dmirage2.deps.included=false && \
  mv /app/dspace/target/${TARGET_DIR}/* /install && \
  mvn clean

# Step 2 - Run Ant Deploy
FROM tomcat:8-jre8 as ant_build
ARG TARGET_DIR=dspace-installer

# Create the initial install deployment using ANT
ENV ANT_VERSION 1.10.7
ENV ANT_HOME /tmp/ant-$ANT_VERSION
ENV PATH $ANT_HOME/bin:$PATH
RUN mkdir $ANT_HOME && \
    wget -qO- "https://archive.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz" | tar -zx --strip-components=1 -C $ANT_HOME

COPY --from=build /install /dspace-src
WORKDIR /dspace-src
RUN ant init_installation update_configs update_code update_webapps update_solr_indexes

# Step 3 - Run tomcat
# Create a new tomcat image that does not retain the the build directory contents
FROM tomcat:8-jre8
ENV DSPACE_INSTALL=/dspace
ENV JAVA_OPTS=-Xmx2000m
EXPOSE 8080 8009

COPY --from=ant_build /dspace $DSPACE_INSTALL

RUN ln -s $DSPACE_INSTALL/webapps/solr    /usr/local/tomcat/webapps/solr    && \
    ln -s $DSPACE_INSTALL/webapps/xmlui   /usr/local/tomcat/webapps/xmlui   && \
    ln -s $DSPACE_INSTALL/webapps/jspui   /usr/local/tomcat/webapps/jspui   && \
    ln -s $DSPACE_INSTALL/webapps/rest    /usr/local/tomcat/webapps/rest    && \
    ln -s $DSPACE_INSTALL/webapps/oai     /usr/local/tomcat/webapps/oai     && \
    ln -s $DSPACE_INSTALL/webapps/rdf     /usr/local/tomcat/webapps/rdf     && \
    ln -s $DSPACE_INSTALL/webapps/sword   /usr/local/tomcat/webapps/sword   && \
    ln -s $DSPACE_INSTALL/webapps/swordv2 /usr/local/tomcat/webapps/swordv2

COPY dspace/src/main/docker/test/solr_web.xml $DSPACE_INSTALL/webapps/solr/WEB-INF/web.xml
COPY dspace/src/main/docker/test/rest_web.xml $DSPACE_INSTALL/webapps/rest/WEB-INF/web.xml

RUN sed -i -e "s|\${dspace.dir}|$DSPACE_INSTALL|" $DSPACE_INSTALL/webapps/solr/WEB-INF/web.xml && \
    sed -i -e "s|\${dspace.dir}|$DSPACE_INSTALL|" $DSPACE_INSTALL/webapps/rest/WEB-INF/web.xml
