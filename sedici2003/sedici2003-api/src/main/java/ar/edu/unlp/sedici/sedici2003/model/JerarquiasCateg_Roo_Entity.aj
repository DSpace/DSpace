// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.unlp.sedici.sedici2003.model;

import ar.edu.unlp.sedici.sedici2003.model.JerarquiasCateg;
import java.lang.Integer;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect JerarquiasCateg_Roo_Entity {
    
    declare @type: JerarquiasCateg: @Entity;
    
    declare @type: JerarquiasCateg: @Table(name = "jerarquias_categ");
    
    @PersistenceContext
    transient EntityManager JerarquiasCateg.entityManager;
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id")
    private Integer JerarquiasCateg.id;
    
    public Integer JerarquiasCateg.getId() {
        return this.id;
    }
    
    public void JerarquiasCateg.setId(Integer id) {
        this.id = id;
    }
    
    @Transactional
    public void JerarquiasCateg.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void JerarquiasCateg.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            JerarquiasCateg attached = JerarquiasCateg.findJerarquiasCateg(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void JerarquiasCateg.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void JerarquiasCateg.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public JerarquiasCateg JerarquiasCateg.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        JerarquiasCateg merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager JerarquiasCateg.entityManager() {
        EntityManager em = new JerarquiasCateg().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long JerarquiasCateg.countJerarquiasCategs() {
        return entityManager().createQuery("SELECT COUNT(o) FROM JerarquiasCateg o", Long.class).getSingleResult();
    }
    
    public static List<JerarquiasCateg> JerarquiasCateg.findAllJerarquiasCategs() {
        return entityManager().createQuery("SELECT o FROM JerarquiasCateg o", JerarquiasCateg.class).getResultList();
    }
    
    public static JerarquiasCateg JerarquiasCateg.findJerarquiasCateg(Integer id) {
        if (id == null) return null;
        return entityManager().find(JerarquiasCateg.class, id);
    }
    
    public static List<JerarquiasCateg> JerarquiasCateg.findJerarquiasCategEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM JerarquiasCateg o", JerarquiasCateg.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
