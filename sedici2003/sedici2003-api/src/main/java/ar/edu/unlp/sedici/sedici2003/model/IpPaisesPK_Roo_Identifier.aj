// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.edu.unlp.sedici.sedici2003.model;

import java.lang.Object;
import java.lang.String;
import javax.persistence.Column;
import javax.persistence.Embeddable;

privileged aspect IpPaisesPK_Roo_Identifier {
    
    declare @type: IpPaisesPK: @Embeddable;
    
    @Column(name = "abreviatura", nullable = false, length = 2)
    private String IpPaisesPK.abreviatura;
    
    @Column(name = "ipinicial", nullable = false, length = 10)
    private String IpPaisesPK.ipinicial;
    
    @Column(name = "ipfinal", nullable = false, length = 10)
    private String IpPaisesPK.ipfinal;
    
    public IpPaisesPK.new(String abreviatura, String ipinicial, String ipfinal) {
        super();
        this.abreviatura = abreviatura;
        this.ipinicial = ipinicial;
        this.ipfinal = ipfinal;
    }

    private IpPaisesPK.new() {
        super();
    }

    public String IpPaisesPK.getAbreviatura() {
        return this.abreviatura;
    }
    
    public String IpPaisesPK.getIpinicial() {
        return this.ipinicial;
    }
    
    public String IpPaisesPK.getIpfinal() {
        return this.ipfinal;
    }
    
    public boolean IpPaisesPK.equals(Object obj) {
        if (this == obj) return true;
        if (obj == null) return false;
        if (!(obj instanceof IpPaisesPK)) return false;
        IpPaisesPK other = (IpPaisesPK) obj;
        if (abreviatura == null) {
            if (other.abreviatura != null) return false;
        } else if (!abreviatura.equals(other.abreviatura)) return false;
        if (ipinicial == null) {
            if (other.ipinicial != null) return false;
        } else if (!ipinicial.equals(other.ipinicial)) return false;
        if (ipfinal == null) {
            if (other.ipfinal != null) return false;
        } else if (!ipfinal.equals(other.ipfinal)) return false;
        return true;
    }
    
    public int IpPaisesPK.hashCode() {
        final int prime = 31;
        int result = 17;
        result = prime * result + (abreviatura == null ? 0 : abreviatura.hashCode());
        result = prime * result + (ipinicial == null ? 0 : ipinicial.hashCode());
        result = prime * result + (ipfinal == null ? 0 : ipfinal.hashCode());
        return result;
    }
    
}
